(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{495:function(t,e,s){"use strict";s.r(e);var v=s(42),_=Object(v.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"图论"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#图论"}},[t._v("#")]),t._v(" 图论")]),t._v(" "),s("p",[t._v("图论主要掌握"),s("strong",[t._v("dfs、bfs、flood fill、拓扑排序、最短路、二分图、最小生成树等")]),t._v("算法")]),t._v(" "),s("p",[t._v("图论的题目重点考察"),s("strong",[t._v("建图")])]),t._v(" "),s("p",[t._v("记忆算法的思路，而不是代码")]),t._v(" "),s("h2",{attrs:{id:"图的一些概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#图的一些概念"}},[t._v("#")]),t._v(" 图的一些概念")]),t._v(" "),s("ul",[s("li",[t._v("入度，出度")]),t._v(" "),s("li",[t._v("顶点，边，权")]),t._v(" "),s("li",[t._v("环")]),t._v(" "),s("li",[t._v("拓扑排序")]),t._v(" "),s("li",[t._v("最短路")]),t._v(" "),s("li",[t._v("最小生成树")]),t._v(" "),s("li",[t._v("二分图")])]),t._v(" "),s("h2",{attrs:{id:"题目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#题目"}},[t._v("#")]),t._v(" 题目")]),t._v(" "),s("ul",[s("li",[s("RouterLink",{attrs:{to:"/alg/graph/problems/901-1000/997.find-the-town-judge.html"}},[t._v("LeetCode 997. Find the Town Judge (easy)")])],1)])])}),[],!1,null,null,null);e.default=_.exports}}]);
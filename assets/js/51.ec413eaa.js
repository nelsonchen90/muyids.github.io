(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{503:function(t,l,n){"use strict";n.r(l);var s=n(42),i=Object(s.a)({},(function(){var t=this,l=t.$createElement,n=t._self._c||l;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"最短路"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#最短路"}},[t._v("#")]),t._v(" 最短路")]),t._v(" "),n("p",[t._v("最短路算法的分类：")]),t._v(" "),n("ul",[n("li",[t._v("单源最短路\n"),n("ul",[n("li",[t._v("所有边权都是正数\n"),n("ul",[n("li",[t._v("朴素的Dijkstra算法 O(n^2) 适合稠密图")]),t._v(" "),n("li",[t._v("堆优化版的Dijkstra算法 O(mlog n)（m是图中节点的个数）适合稀疏图")])])]),t._v(" "),n("li",[t._v("存在负权边\n"),n("ul",[n("li",[t._v("Bellman-Ford O(nm)")]),t._v(" "),n("li",[t._v("spfa 一般O(m),最坏O(nm)")])])])])]),t._v(" "),n("li",[t._v("多源汇最短路  Floyd算法 O(n^3)")])]),t._v(" "),n("p",[n("img",{attrs:{src:"https://muyids.oss-cn-beijing.aliyuncs.com/shortest-path.png",alt:"最短路算法"}})])])}),[],!1,null,null,null);l.default=i.exports}}]);
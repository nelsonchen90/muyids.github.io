(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{549:function(t,a,e){"use strict";e.r(a);var r=e(42),s=Object(r.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"桶排序"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#桶排序"}},[t._v("#")]),t._v(" 桶排序")]),t._v(" "),e("p",[t._v("桶排序 的两个步骤：")]),t._v(" "),e("ol",[e("li",[t._v("分桶")]),t._v(" "),e("li",[t._v("合并")])]),t._v(" "),e("h2",{attrs:{id:"基数排序"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基数排序"}},[t._v("#")]),t._v(" 基数排序")]),t._v(" "),e("ul",[e("li",[t._v("先按个位进行桶排序")]),t._v(" "),e("li",[t._v("然后按十位进行桶排序")]),t._v(" "),e("li",[t._v("然后按百位进行桶排序\n...")]),t._v(" "),e("li",[t._v("直到所有位完成桶排序，最后的序列就是排好序的")])]),t._v(" "),e("p",[t._v("比如：452，897，472，385，752")]),t._v(" "),e("ul",[e("li",[t._v("按个位：452，472，752，385，897")]),t._v(" "),e("li",[t._v("按十位：452，752，472，385，897")]),t._v(" "),e("li",[t._v("按百位：385，452，472，752，897 已经排好序")])]),t._v(" "),e("h2",{attrs:{id:"计数排序"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#计数排序"}},[t._v("#")]),t._v(" 计数排序")]),t._v(" "),e("p",[t._v("统计每一个数字出现的次数，输出次数次即可")]),t._v(" "),e("h2",{attrs:{id:"题目"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#题目"}},[t._v("#")]),t._v(" 题目")]),t._v(" "),e("ul",[e("li",[e("p",[e("RouterLink",{attrs:{to:"/alg/sort/problems/101-200/164.maximum-gap.html"}},[t._v("LeetCode 164. Maximum Gap (hard)")])],1)]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/alg/sort/problems/201-300/220.contains-duplicate-iii.html"}},[t._v("LeetCode 220. Contains Duplicate III (medium)")])],1)]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/alg/sort/problems/401-500/451.sort-characters-by-frequency.html"}},[t._v("LeetCode 451. Sort Characters By Frequency (medium)")])],1)])])])}),[],!1,null,null,null);a.default=s.exports}}]);
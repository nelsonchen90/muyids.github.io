(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{471:function(t,e,a){"use strict";a.r(e);var r=a(42),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"线性dp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#线性dp"}},[t._v("#")]),t._v(" 线性dp")]),t._v(" "),a("p",[t._v("线性dp的模型是线性的")]),t._v(" "),a("h2",{attrs:{id:"问题分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题分类"}},[t._v("#")]),t._v(" 问题分类")]),t._v(" "),a("p",[t._v("线性dp可以按分析方式分为几类：")]),t._v(" "),a("ul",[a("li",[t._v("坐标型（一维坐标，二维坐标）")]),t._v(" "),a("li",[t._v("划分型（将序列分成若干段，每一段具有最大/最小的性质）")])]),t._v(" "),a("h2",{attrs:{id:"坐标型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#坐标型"}},[t._v("#")]),t._v(" 坐标型")]),t._v(" "),a("ul",[a("li",[t._v("坐标记录状态")]),t._v(" "),a("li",[t._v("可以用滚动数组进行空间优化")])]),t._v(" "),a("h3",{attrs:{id:"一维坐标"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一维坐标"}},[t._v("#")]),t._v(" 一维坐标")]),t._v(" "),a("p",[t._v("硬币组合: 足够的2，5，7面值的硬币，问最少用多少个硬币能组合出面值27（有多少种方式凑出面值27）")]),t._v(" "),a("p",[t._v("f(i) 表示凑出i元所有的最少硬币数（凑出i元的方案数）")]),t._v(" "),a("ul",[a("li",[a("p",[a("RouterLink",{attrs:{to:"/alg/dp/problems/501-600/518.coin-change-2.html"}},[t._v("LeetCode 518. Coin Change 2 (medium)")])],1)]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://leetcode-cn.com/problems/ba-shu-zi-fan-yi-cheng-zi-fu-chuan-lcof/",target:"_blank",rel:"noopener noreferrer"}},[t._v("面试题46. 把数字翻译成字符串"),a("OutboundLink")],1)])])]),t._v(" "),a("h3",{attrs:{id:"二维坐标"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二维坐标"}},[t._v("#")]),t._v(" 二维坐标")]),t._v(" "),a("p",[t._v("不同路径：在一个二维棋盘中，机器人从左上角走到右下角，有多少种走法")]),t._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/alg/dp/problems/1-100/64.minimum-path-sum.html"}},[t._v("LeetCode 64. Minimum Path Sum (medium)")])],1)]),t._v(" "),a("h3",{attrs:{id:"炸弹袭击"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#炸弹袭击"}},[t._v("#")]),t._v(" 炸弹袭击")]),t._v(" "),a("p",[t._v("二维矩阵中的格子为空，敌人，墙，炸弹可以放在任意空地上，炸弹会杀死同一行和同一列没有墙阻隔的敌人；问一个炸弹杀死的最大敌人数")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.lintcode.com/problem/bomb-enemy/",target:"_blank",rel:"noopener noreferrer"}},[t._v("领扣553. 炸弹袭击"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("算法思路：")]),t._v(" "),a("ul",[a("li",[t._v("记录dp[i][j][0,1,2,3]分别为向四个方向能炸死的敌人数目")]),t._v(" "),a("li",[t._v("从四个方向，做差分，记录每个位置在此方向上能够炸死的敌人数目")]),t._v(" "),a("li",[t._v("四个方向求和，迭代得最大值")])]),t._v(" "),a("h3",{attrs:{id:"最长序列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最长序列"}},[t._v("#")]),t._v(" 最长序列")]),t._v(" "),a("ul",[a("li",[a("p",[a("RouterLink",{attrs:{to:"/alg/dp/problems/201-300/300.longest-increasing-subsequence.html"}},[t._v("LeetCode 300. Longest Increasing Subsequence (medium)")])],1)]),t._v(" "),a("li",[a("p",[a("RouterLink",{attrs:{to:"/alg/dp/problems/1101-1200/1143.longest-common-subsequence.html"}},[t._v("LeetCode 1143. Longest Common Subsequence (medium)")])],1)])]),t._v(" "),a("h3",{attrs:{id:"图形问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#图形问题"}},[t._v("#")]),t._v(" 图形问题")]),t._v(" "),a("p",[t._v("根据棋盘中图形的性质，通过相邻坐标的状态，进行推导")]),t._v(" "),a("h4",{attrs:{id:"矩形统计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#矩形统计"}},[t._v("#")]),t._v(" 矩形统计")]),t._v(" "),a("ul",[a("li",[a("p",[a("RouterLink",{attrs:{to:"/alg/dp/problems/201-300/221.maximal-square.html"}},[t._v("LeetCode 221. Maximal Square (medium)")])],1)]),t._v(" "),a("li",[a("p",[a("RouterLink",{attrs:{to:"/alg/dp/problems/1201-1300/1277.count-square-submatrices-with-all-ones.html"}},[t._v("LeetCode 1277. Count Square Submatrices with All Ones (medium)")])],1)])]),t._v(" "),a("h2",{attrs:{id:"序列型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#序列型"}},[t._v("#")]),t._v(" 序列型")]),t._v(" "),a("p",[t._v("序列型一般分为单序列、双序列")]),t._v(" "),a("ul",[a("li",[t._v("一般需要自定义空序列表示f[0]")]),t._v(" "),a("li",[t._v("有时候会有K维序列，表示K种状态")])]),t._v(" "),a("h2",{attrs:{id:"房子涂色"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#房子涂色"}},[t._v("#")]),t._v(" 房子涂色")]),t._v(" "),a("ul",[a("li",[a("p",[a("RouterLink",{attrs:{to:"/alg/dp/problems/201-300/256.paint-house.html"}},[t._v("LeetCode 256. Paint House (easy)")])],1)]),t._v(" "),a("li",[a("p",[a("RouterLink",{attrs:{to:"/alg/dp/problems/201-300/265.paint-house-ii.html"}},[t._v("LeetCode 265. Paint House II (hard)")])],1)])]),t._v(" "),a("h3",{attrs:{id:"打家劫舍系列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#打家劫舍系列"}},[t._v("#")]),t._v(" 打家劫舍系列")]),t._v(" "),a("ul",[a("li",[a("p",[a("RouterLink",{attrs:{to:"/alg/dp/problems/101-200/198.house-robber.html"}},[t._v("LeetCode 198. House Robber (easy)")])],1)]),t._v(" "),a("li",[a("p",[a("RouterLink",{attrs:{to:"/alg/dp/problems/201-300/213.house-robber-ii.html"}},[t._v("LeetCode 213. House Robber II (medium)")])],1)])]),t._v(" "),a("p",[t._v("打家劫舍3 是树形DP")]),t._v(" "),a("h3",{attrs:{id:"股票系列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#股票系列"}},[t._v("#")]),t._v(" 股票系列")]),t._v(" "),a("ul",[a("li",[a("p",[a("RouterLink",{attrs:{to:"/alg/dp/problems/101-200/121.best-time-to-buy-and-sell-stock.html"}},[t._v("LeetCode 121. Best Time to Buy and Sell Stock (easy)")])],1)]),t._v(" "),a("li",[a("p",[a("RouterLink",{attrs:{to:"/alg/dp/problems/101-200/122.best-time-to-buy-and-sell-stock-ii.html"}},[t._v("LeetCode 122. Best Time to Buy and Sell Stock II (easy)")])],1)]),t._v(" "),a("li",[a("p",[a("RouterLink",{attrs:{to:"/alg/dp/problems/101-200/123.best-time-to-buy-and-sell-stock-iii.html"}},[t._v("LeetCode 123. Best Time to Buy and Sell Stock III (hard)")])],1)]),t._v(" "),a("li",[a("p",[a("RouterLink",{attrs:{to:"/alg/dp/problems/101-200/188.best-time-to-buy-and-sell-stock-iv.html"}},[t._v("LeetCode 188. Best Time to Buy and Sell Stock IV (hard)")])],1)]),t._v(" "),a("li",[a("p",[a("RouterLink",{attrs:{to:"/alg/dp/problems/301-400/309.best-time-to-buy-and-sell-stock-with-cooldown.html"}},[t._v("LeetCode 309. Best Time to Buy and Sell Stock with Cooldown (medium)")])],1)]),t._v(" "),a("li",[a("p",[a("RouterLink",{attrs:{to:"/alg/dp/problems/701-800/714.best-time-to-buy-and-sell-stock-with-transaction-fee.html"}},[t._v("LeetCode 714. Best Time to Buy and Sell Stock with Transaction Fee (medium)")])],1)])]),t._v(" "),a("h3",{attrs:{id:"字符串匹配系列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串匹配系列"}},[t._v("#")]),t._v(" 字符串匹配系列")]),t._v(" "),a("ul",[a("li",[a("p",[a("RouterLink",{attrs:{to:"/alg/dp/problems/1-100/10.regular-expression-matching.html"}},[t._v("LeetCode 10. Regular Expression Matching (hard)")])],1)]),t._v(" "),a("li",[a("p",[a("RouterLink",{attrs:{to:"/alg/dp/problems/1-100/44.wildcard-matching.html"}},[t._v("LeetCode 44. Wildcard Matching (hard)")])],1)]),t._v(" "),a("li",[a("p",[a("RouterLink",{attrs:{to:"/alg/dp/problems/1-100/72.edit-distance.html"}},[t._v("LeetCode 72. Edit Distance (hard)")])],1)])]),t._v(" "),a("h2",{attrs:{id:"划分型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#划分型"}},[t._v("#")]),t._v(" 划分型")]),t._v(" "),a("p",[t._v("给定长度为N的序列，要求划分为若干段")]),t._v(" "),a("ul",[a("li",[t._v("段数不限，或指定K段")]),t._v(" "),a("li",[t._v("每一段满足一定的性质（最小代价，能不能等）")])]),t._v(" "),a("p",[t._v("做法：")]),t._v(" "),a("ul",[a("li",[t._v("类似于序列型动态规划，但是通常要加上段数信息")]),t._v(" "),a("li",[t._v("一般用"),a("code",[t._v("f[i + 1][k]")]),t._v("来记录前i个元素（元素0~i-1,f[0][k]表示空序列）分成k段的性质，如最小代价")]),t._v(" "),a("li",[t._v("关注最后一段，枚举最后一段可能情况 + 前面序列, 求最优策略")])]),t._v(" "),a("p",[t._v("注意：划分型动态规划每一段序列一定是连续的")]),t._v(" "),a("h3",{attrs:{id:"数字规律一类题目（一维坐标）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数字规律一类题目（一维坐标）"}},[t._v("#")]),t._v(" 数字规律一类题目（一维坐标）")]),t._v(" "),a("p",[t._v("把一个完整的数字分成几个，满足一定的性质")]),t._v(" "),a("ul",[a("li",[a("p",[a("RouterLink",{attrs:{to:"/alg/dp/problems/201-300/279.perfect-squares.html"}},[t._v("LeetCode 279. Perfect Squares (medium)")])],1)]),t._v(" "),a("li",[a("p",[a("RouterLink",{attrs:{to:"/alg/dp/problems/301-400/343.integer-break.html"}},[t._v("LeetCode 343. Integer Break (medium)")])],1)])]),t._v(" "),a("p",[t._v("此类问题往往也可以用完全背包模型去解决")]),t._v(" "),a("h3",{attrs:{id:"解码方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解码方法"}},[t._v("#")]),t._v(" 解码方法")]),t._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/alg/dp/problems/1-100/91.decode-ways.html"}},[t._v("LeetCode 91. Decode Ways (medium)")])],1)]),t._v(" "),a("h3",{attrs:{id:"分割回文串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分割回文串"}},[t._v("#")]),t._v(" 分割回文串")]),t._v(" "),a("ul",[a("li",[a("p",[a("RouterLink",{attrs:{to:"/alg/dp/problems/101-200/132.palindrome-partitioning-ii.html"}},[t._v("LeetCode 132. Palindrome Partitioning II (hard)")])],1)]),t._v(" "),a("li",[a("p",[a("RouterLink",{attrs:{to:"/alg/dp/problems/1201-1300/1278.palindrome-partitioning-iii.html"}},[t._v("LeetCode 1278. Palindrome Partitioning III (hard)")])],1)])]),t._v(" "),a("h3",{attrs:{id:"抄写书籍（领扣437）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#抄写书籍（领扣437）"}},[t._v("#")]),t._v(" 抄写书籍（领扣437）")]),t._v(" "),a("p",[t._v("N本书，每本有A[i]页；K个抄写员，每个抄写员可以抄连续的几本书；抄写员抄写速度一样；问最少需要多长时间抄写完毕。")]),t._v(" "),a("p",[t._v("可以用贪心，动态规划更通用，如果稍微变形，贪心就不可以用了")]),t._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/alg/dp/problems/401-500/410.split-array-largest-sum.html"}},[t._v("LeetCode 410. Split Array Largest Sum (hard)")])],1)]),t._v(" "),a("h3",{attrs:{id:"鸡蛋掉落"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#鸡蛋掉落"}},[t._v("#")]),t._v(" 鸡蛋掉落")]),t._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/alg/dp/problems/801-900/887.super-egg-drop.html"}},[t._v("LeetCode 887. Super Egg Drop (hard)")])],1)]),t._v(" "),a("h2",{attrs:{id:"经典问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#经典问题"}},[t._v("#")]),t._v(" 经典问题")]),t._v(" "),a("ul",[a("li",[a("p",[a("RouterLink",{attrs:{to:"/alg/dp/problems/201-300/300.longest-increasing-subsequence.html"}},[t._v("LeetCode 300. Longest Increasing Subsequence (medium)")])],1)]),t._v(" "),a("li",[a("p",[a("RouterLink",{attrs:{to:"/alg/dp/problems/1101-1200/1143.longest-common-subsequence.html"}},[t._v("LeetCode 1143. Longest Common Subsequence (medium)")])],1)]),t._v(" "),a("li",[a("p",[a("RouterLink",{attrs:{to:"/alg/dp/problems/101-200/120.triangle.html"}},[t._v("LeetCode 120. Triangle (medium)")])],1)]),t._v(" "),a("li",[a("p",[a("RouterLink",{attrs:{to:"/alg/dp/problems/1-100/53.maximum-subarray.html"}},[t._v("LeetCode 53. Maximum Subarray (easy)")])],1)]),t._v(" "),a("li",[a("p",[a("RouterLink",{attrs:{to:"/alg/dp/problems/101-200/152.maximum-product-subarray.html"}},[t._v("LeetCode 152. Maximum Product Subarray (medium)")])],1)]),t._v(" "),a("li",[a("p",[a("RouterLink",{attrs:{to:"/alg/dp/problems/801-900/887.super-egg-drop.html"}},[t._v("LeetCode 887. Super Egg Drop (hard)")])],1)]),t._v(" "),a("li",[a("p",[a("RouterLink",{attrs:{to:"/alg/dp/problems/301-400/354.russian-doll-envelopes.html"}},[t._v("LeetCode 354. Russian Doll Envelopes (hard)")])],1)])])])}),[],!1,null,null,null);e.default=s.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[164],{430:function(r,e,o){"use strict";o.r(e);var a=o(42),t=Object(a.a)({},(function(){var r=this,e=r.$createElement,o=r._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[o("p",[r._v("zookeeper 在 Kafka 中的作用")]),r._v(" "),o("ul",[o("li",[r._v("配置管理")]),r._v(" "),o("li",[r._v("Leader Election")]),r._v(" "),o("li",[r._v("服务发现")])]),r._v(" "),o("h1",{attrs:{id:"leader-election"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#leader-election"}},[r._v("#")]),r._v(" Leader Election")]),r._v(" "),o("hr"),r._v(" "),o("p",[o("img",{attrs:{src:"https://muyids.oss-cn-beijing.aliyuncs.com/kafka-zookeeper-storage.png",alt:"kafka的zookeeper存储结构"}})]),r._v(" "),o("h1",{attrs:{id:"kafka-controller选举"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#kafka-controller选举"}},[r._v("#")]),r._v(" Kafka Controller选举")]),r._v(" "),o("h1",{attrs:{id:"partition的leader选举"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#partition的leader选举"}},[r._v("#")]),r._v(" partition的leader选举")]),r._v(" "),o("h1",{attrs:{id:"broker注册"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#broker注册"}},[r._v("#")]),r._v(" Broker注册")]),r._v(" "),o("p",[r._v("Broker是分布式部署并且相互之间相互独立，但是需要有一个注册系统能够将整个集群中的Broker管理起来，此时就使用到了Zookeeper。")]),r._v(" "),o("p",[r._v("在Zookeeper上会有一个专门用来进行Broker服务器列表记录的节点："),o("code",[r._v("/brokers/ids")])]),r._v(" "),o("p",[r._v("每个Broker在启动时，都会到Zookeeper上进行注册，即到/brokers/ids下创建属于自己的节点，如"),o("code",[r._v("/brokers/ids/[0...N]")]),r._v("。")]),r._v(" "),o("p",[r._v("Kafka使用了全局唯一的数字来指代每个Broker服务器，不同的Broker必须使用不同的Broker ID进行注册，创建完节点后，"),o("strong",[r._v("每个Broker就会将自己的IP地址和端口信息记录到该节点")]),r._v("中去。其中，Broker创建的节点类型是临时节点，一旦Broker宕机，则对应的临时节点也会被自动删除。")]),r._v(" "),o("h1",{attrs:{id:"topic注册"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#topic注册"}},[r._v("#")]),r._v(" Topic注册")]),r._v(" "),o("p",[r._v("在Kafka中，同一个Topic的消息会被分成多个分区并将其分布在多个Broker上，这些分区信息及与Broker的对应关系也都是由Zookeeper在维护，由专门的节点来记录，如："),o("code",[r._v("/brokers/topics")])]),r._v(" "),o("p",[r._v("Kafka中每个Topic都会以"),o("code",[r._v("/brokers/topics/[topic]")]),r._v("的形式被记录，如"),o("code",[r._v("/brokers/topics/login")]),r._v("和"),o("code",[r._v("/brokers/topics/search")]),r._v("等。Broker服务器启动后，会到对应Topic节点（"),o("code",[r._v("/brokers/topics")]),r._v("）上注册自己的"),o("code",[r._v("Broker ID")]),r._v("并写入针对该Topic的分区总数")]),r._v(" "),o("p",[r._v("如"),o("code",[r._v("/brokers/topics/login/3->2")]),r._v('，这个节点表示Broker ID为3的一个Broker服务器，对于"login"这个Topic的消息，提供了2个分区进行消息存储，同样，这个分区节点也是临时节点。')]),r._v(" "),o("h1",{attrs:{id:"生产者负载均衡"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#生产者负载均衡"}},[r._v("#")]),r._v(" 生产者负载均衡")]),r._v(" "),o("p",[r._v("由于同一个Topic消息会被分区并将其分布在多个Broker上，因此，生产者需要将消息合理地发送到这些分布式的Broker上，那么如何实现生产者的负载均衡，Kafka支持传统的四层负载均衡，也支持Zookeeper方式实现负载均衡。")]),r._v(" "),o("p",[r._v("(1) 四层负载均衡，根据生产者的IP地址和端口来为其确定一个相关联的Broker。通常，一个生产者只会对应单个Broker，然后该生产者产生的消息都发往该Broker。这种方式逻辑简单，每个生产者不需要同其他系统建立额外的TCP连接，只需要和Broker维护单个TCP连接即可。但是，其无法做到真正的负载均衡，因为实际系统中的每个生产者产生的消息量及每个Broker的消息存储量都是不一样的，如果有些生产者产生的消息远多于其他生产者的话，那么会导致不同的Broker接收到的消息总数差异巨大，同时，生产者也无法实时感知到Broker的新增和删除。")]),r._v(" "),o("p",[r._v("(2) 使用Zookeeper进行负载均衡，由于每个Broker启动时，都会完成Broker注册过程，生产者会通过该节点的变化来动态地感知到Broker服务器列表的变更，这样就可以实现动态的负载均衡机制。")]),r._v(" "),o("h1",{attrs:{id:"消费者负载均衡"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#消费者负载均衡"}},[r._v("#")]),r._v(" 消费者负载均衡")]),r._v(" "),o("p",[r._v("与生产者类似，Kafka中的消费者同样需要进行负载均衡来实现多个消费者合理地从对应的Broker服务器上接收消息，每个消费者分组包含若干消费者，每条消息都只会发送给分组中的一个消费者，不同的消费者分组消费自己特定的Topic下面的消息，互不干扰。")]),r._v(" "),o("h1",{attrs:{id:"补充"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#补充"}},[r._v("#")]),r._v(" 补充")]),r._v(" "),o("p",[r._v("早期版本的 kafka 用 zk 做 meta 信息存储，consumer 的消费状态，group 的管理以及 offse t的值。考虑到zk本身的一些因素以及整个架构较大概率存在单点问题，新版本中确实逐渐弱化了zookeeper的作用。")]),r._v(" "),o("p",[o("strong",[r._v("新的consumer使用了kafka内部的group coordination协议，减少了对zookeeper的依赖")])]),r._v(" "),o("h1",{attrs:{id:"参考"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[r._v("#")]),r._v(" 参考")]),r._v(" "),o("ul",[o("li",[r._v("https://www.jianshu.com/p/a036405f989c")])])])}),[],!1,null,null,null);e.default=t.exports}}]);
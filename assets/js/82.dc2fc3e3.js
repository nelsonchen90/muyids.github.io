(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{564:function(t,s,a){"use strict";a.r(s);var e=a(42),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"应用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#应用场景"}},[t._v("#")]),t._v(" 应用场景")]),t._v(" "),a("ul",[a("li",[t._v("二分都是跟单调性有关，有单调性的题目一般都可以二分。")]),t._v(" "),a("li",[t._v("题目存在两段性的性质。一部分满足，一部分不满足。")])]),t._v(" "),a("h2",{attrs:{id:"算法思想"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#算法思想"}},[t._v("#")]),t._v(" 算法思想")]),t._v(" "),a("p",[t._v("将区间分为左右两边（分治），判断中点，确定答案在哪一边，每次缩小一半，直到得到最终答案。")]),t._v(" "),a("ul",[a("li",[t._v("需要注意"),a("strong",[t._v("边界问题")])])]),t._v(" "),a("h2",{attrs:{id:"模板"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模板"}},[t._v("#")]),t._v(" 模板")]),t._v(" "),a("p",[t._v("二分模板一共有两个，分别适用于不同情况。")]),t._v(" "),a("p",[t._v("算法思路：假设目标值在闭区间"),a("code",[t._v("[l, r]")]),t._v("中， 每次将区间长度缩小一半，当"),a("code",[t._v("l == r")]),t._v("时，我们就找到了目标值。")]),t._v(" "),a("h3",{attrs:{id:"模板1-区间-l-mid-和-mid-1-r"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模板1-区间-l-mid-和-mid-1-r"}},[t._v("#")]),t._v(" 模板1(区间[l, mid]和[mid+1, r])")]),t._v(" "),a("p",[t._v("当我们将区间"),a("code",[t._v("[l, r]")]),t._v("划分成"),a("code",[t._v("[l, mid]")]),t._v("和"),a("code",[t._v("[mid + 1, r]")]),t._v("时，"),a("code",[t._v("mid=l+r>>1")]),t._v("，其更新操作是"),a("code",[t._v("r = mid")]),t._v("或者"),a("code",[t._v("l = mid + 1")]),t._v(";")]),t._v(" "),a("p",[t._v("C++ 代码模板：")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("binary_search")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("l "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" mid "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" l "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" r "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("check")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" r "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" l "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mid "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[t._v("此模板返回的结果是"),a("strong",[t._v("右区间的最左边元素")])]),t._v(" "),a("h3",{attrs:{id:"模板2-区间-l-mid-1-和-mid-r"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模板2-区间-l-mid-1-和-mid-r"}},[t._v("#")]),t._v(" 模板2(区间[l, mid-1]和[mid, r])")]),t._v(" "),a("p",[t._v("当我们将区间"),a("code",[t._v("[l, r]")]),t._v("划分成"),a("code",[t._v("[l, mid - 1]")]),t._v("和"),a("code",[t._v("[mid, r]")]),t._v("时，"),a("code",[t._v("mid=l+r+1>>1")]),t._v("，其更新操作是"),a("code",[t._v("r = mid - 1")]),t._v("或者"),a("code",[t._v("l = mid")]),t._v(";")]),t._v(" "),a("p",[t._v("因为"),a("code",[t._v("r=mid-1")]),t._v("，为了防止死循环，计算"),a("code",[t._v("mid")]),t._v("时需要加1。")]),t._v(" "),a("p",[t._v("C++ 代码模板：")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("binary_search")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("l "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" mid "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" l "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" r "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("check")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" l "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" r "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mid "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[t._v("此模板返回的结果是"),a("strong",[t._v("左区间的最右边元素")])]),t._v(" "),a("h2",{attrs:{id:"七天学会二分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#七天学会二分"}},[t._v("#")]),t._v(" 七天学会二分")]),t._v(" "),a("h3",{attrs:{id:"第一天（概念题）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一天（概念题）"}},[t._v("#")]),t._v(" 第一天（概念题）")]),t._v(" "),a("p",[t._v("初识二分算法，学习两种二分查找的算法模板")]),t._v(" "),a("ul",[a("li",[a("p",[a("RouterLink",{attrs:{to:"/problems/701-800/704.binary-search.html"}},[t._v("LeetCode 704. Binary Search (easy)")])],1)]),t._v(" "),a("li",[a("p",[a("RouterLink",{attrs:{to:"/problems/1-100/69.sqrtx.html"}},[t._v("LeetCode 69. Sqrt(x) (easy)")])],1)])]),t._v(" "),a("p",[t._v("选做：")]),t._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/problems/1-100/35.search-insert-position.html"}},[t._v("LeetCode 35. Search Insert Position (easy)")])],1)]),t._v(" "),a("h3",{attrs:{id:"第二天（模板强化练习）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第二天（模板强化练习）"}},[t._v("#")]),t._v(" 第二天（模板强化练习）")]),t._v(" "),a("p",[t._v("通过一道题练习两种模板的使用")]),t._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/problems/1-100/34.find-first-and-last-position-of-element-in-sorted-array.html"}},[t._v("LeetCode 34. Find First and Last Position of Element in Sorted Array (medium)")])],1)]),t._v(" "),a("h3",{attrs:{id:"第三天（峰值元素探险）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第三天（峰值元素探险）"}},[t._v("#")]),t._v(" 第三天（峰值元素探险）")]),t._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/problems/101-200/162.find-peak-element.html"}},[t._v("LeetCode 162. Find Peak Element (medium)")])],1)]),t._v(" "),a("h3",{attrs:{id:"第四天（有趣的旋转排序数组）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第四天（有趣的旋转排序数组）"}},[t._v("#")]),t._v(" 第四天（有趣的旋转排序数组）")]),t._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/problems/101-200/153.find-minimum-in-rotated-sorted-array.html"}},[t._v("LeetCode 153. Find Minimum in Rotated Sorted Array (medium)")])],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/problems/101-200/154.find-minimum-in-rotated-sorted-array-ii.html"}},[t._v("LeetCode 154. Find Minimum in Rotated Sorted Array II (hard)")])],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/problems/1-100/33.search-in-rotated-sorted-array.html"}},[t._v("LeetCode 33. Search in Rotated Sorted Array (medium)")])],1)]),t._v(" "),a("h3",{attrs:{id:"第五天（二维矩阵中的二分）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第五天（二维矩阵中的二分）"}},[t._v("#")]),t._v(" 第五天（二维矩阵中的二分）")]),t._v(" "),a("ul",[a("li",[a("p",[a("RouterLink",{attrs:{to:"/problems/1-100/74.search-a-2d-matrix.html"}},[t._v("LeetCode 74. Search a 2D Matrix (medium)")])],1)]),t._v(" "),a("li",[a("p",[a("RouterLink",{attrs:{to:"/problems/301-400/378.kth-smallest-element-in-a-sorted-matrix.html"}},[t._v("LeetCode 378. Kth Smallest Element in a Sorted Matrix (medium)")])],1)])]),t._v(" "),a("h3",{attrs:{id:"第六天（有序数组中第kth大的数）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第六天（有序数组中第kth大的数）"}},[t._v("#")]),t._v(" 第六天（有序数组中第Kth大的数）")]),t._v(" "),a("p",[t._v("大家都喜欢探讨 "),a("strong",[t._v("无序数组中第Kth大的数")]),t._v("，那有序数组呢？")]),t._v(" "),a("ul",[a("li",[t._v("如何高效寻找两个有序数组中第K大的数？")])]),t._v(" "),a("p",[t._v("思考题：")]),t._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/problems/1-100/4.median-of-two-sorted-arrays.html"}},[t._v("LeetCode 4. median-of-two-sorted-arrays")])],1)]),t._v(" "),a("h3",{attrs:{id:"第七天（二分，你会了吗？）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第七天（二分，你会了吗？）"}},[t._v("#")]),t._v(" 第七天（二分，你会了吗？）")]),t._v(" "),a("p",[t._v("单纯的二分算法思路很简单，只需要划分好区间、选对模板、处理好边界即可，一些数据量比较大的且满足一定单调性的题目中，与二分结合使用，会极大提升算法效率（此部分题目需要在掌握其他算法基础之上进行学习）。")]),t._v(" "),a("ul",[a("li",[a("p",[a("RouterLink",{attrs:{to:"/problems/201-300/300.longest-increasing-subsequence.html"}},[t._v("LeetCode 300. Longest Increasing Subsequence (medium)")])],1)]),t._v(" "),a("li",[a("p",[a("RouterLink",{attrs:{to:"/problems/201-300/287.find-the-duplicate-number.html"}},[t._v("LeetCode 287. Find the Duplicate Number (medium)")])],1)]),t._v(" "),a("li",[a("p",[a("RouterLink",{attrs:{to:"/problems/301-400/315.count-of-smaller-numbers-after-self.html"}},[t._v("LeetCode 315. Count of Smaller Numbers After Self (hard)")])],1)])]),t._v(" "),a("h3",{attrs:{id:"更多练习"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更多练习"}},[t._v("#")]),t._v(" 更多练习")]),t._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/problems/201-300/275.h-index-ii.html"}},[t._v("LeetCode 275. H-Index II (medium)")])],1)])])}),[],!1,null,null,null);s.default=r.exports}}]);
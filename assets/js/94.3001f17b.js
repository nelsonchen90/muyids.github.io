(window.webpackJsonp=window.webpackJsonp||[]).push([[94],{570:function(t,s,e){"use strict";e.r(s);var a=e(42),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"滑动窗口"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#滑动窗口"}},[t._v("#")]),t._v(" 滑动窗口")]),t._v(" "),e("h2",{attrs:{id:"算法思路"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#算法思路"}},[t._v("#")]),t._v(" 算法思路")]),t._v(" "),e("ol",[e("li",[t._v("使用双指针中的左右指针技巧，初始化 left = right = 0，把索引闭区间 [left, right] 称为一个「窗口」。")]),t._v(" "),e("li",[t._v("先不断地增加 right 指针扩大窗口 [left, right]，直到窗口符合要求")]),t._v(" "),e("li",[t._v("停止增加 right，转而不断增加 left 指针缩小窗口 [left, right]，直到窗口中的字符串不再符合要求。同时，每次增加 left，我们都要更新一轮结果。")]),t._v(" "),e("li",[t._v("重复第 2 和第 3 步，直到 right 到达尽头。")])]),t._v(" "),e("p",[t._v("第 2 步相当于在寻找一个「可行解」，然后第 3 步在优化这个「可行解」，最终找到最优解。\n左右指针轮流前进，窗口大小增增减减，窗口不断向右滑动。")]),t._v(" "),e("p",[t._v("注意:")]),t._v(" "),e("ul",[e("li",[t._v("滑动窗口适用的题目一般具有单调性")]),t._v(" "),e("li",[t._v("滑动窗口、双指针、单调队列和单调栈经常配合使用")])]),t._v(" "),e("h2",{attrs:{id:"代码模板"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#代码模板"}},[t._v("#")]),t._v(" 代码模板")]),t._v(" "),e("div",{staticClass:"language-cpp line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" left "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" right "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 左右指针")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("right "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" s"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 右指针遍历直到边界")]),t._v("\n    window"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("right"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 右元素进窗")]),t._v("\n    right"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 右指针移动")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("valid")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" left "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" right"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 窗口满足条件(优化窗口)")]),t._v("\n        window"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("remove")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("left"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 左元素出窗")]),t._v("\n        left"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                 "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 左指针移动；直到窗口不满足条件")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br")])]),e("h2",{attrs:{id:"练习题目"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#练习题目"}},[t._v("#")]),t._v(" 练习题目")]),t._v(" "),e("ul",[e("li",[e("p",[e("RouterLink",{attrs:{to:"/problems/201-300/239.sliding-window-maximum.html"}},[t._v("LeetCode 239. Sliding Window Maximum (hard)")])],1)]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/problems/401-500/480.sliding-window-median.html"}},[t._v("LeetCode 480. Sliding Window Median (hard)")])],1)]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/problems/1-100/3.longest-substring-without-repeating-characters.html"}},[t._v("LeetCode 3. Longest Substring Without Repeating Characters (medium)")])],1)]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/problems/1-100/76.minimum-window-substring.html"}},[t._v("LeetCode 76. Minimum Window Substring (hard)")])],1)]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/problems/301-400/395.longest-substring-with-at-least-k-repeating-characters.html"}},[t._v("LeetCode 395. Longest Substring with At Least K Repeating Characters (medium)")])],1)]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/problems/501-600/567.permutation-in-string.html"}},[t._v("LeetCode 567. Permutation in String (medium)")])],1)]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/problems/401-500/438.find-all-anagrams-in-a-string.html"}},[t._v("LeetCode 438. Find All Anagrams in a String (medium)")])],1)]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/problems/201-300/209.minimum-size-subarray-sum.html"}},[t._v("LeetCode 209. Minimum Size Subarray Sum (medium)")])],1)]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/problems/401-500/424.longest-repeating-character-replacement.html"}},[t._v("LeetCode 424. Longest Repeating Character Replacement (medium)")])],1)]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/problems/1201-1300/1208.get-equal-substrings-within-budget.html"}},[t._v("LeetCode 1208. Get Equal Substrings Within Budget (medium)")])],1)]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/problems/901-1000/904.fruit-into-baskets.html"}},[t._v("LeetCode 904. Fruit Into Baskets (medium)")])],1)]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/problems/901-1000/978.longest-turbulent-subarray.html"}},[t._v("LeetCode 978. Longest Turbulent Subarray (medium)")])],1)])]),t._v(" "),e("h2",{attrs:{id:"todo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#todo"}},[t._v("#")]),t._v(" TODO")]),t._v(" "),e("ul",[e("li",[e("p",[e("RouterLink",{attrs:{to:"/problems/901-1000/992.subarrays-with-k-different-integers.html"}},[t._v("LeetCode 992. Subarrays with K Different Integers (hard)")])],1)]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/problems/901-1000/995.minimum-number-of-k-consecutive-bit-flips.html"}},[t._v("LeetCode 995. Minimum Number of K Consecutive Bit Flips (hard)")])],1)]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/problems/1001-1100/1040.moving-stones-until-consecutive-ii.html"}},[t._v("LeetCode 1040. Moving Stones Until Consecutive II (medium)")])],1)]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/problems/1001-1100/1052.grumpy-bookstore-owner.html"}},[t._v("LeetCode 1052. Grumpy Bookstore Owner (medium)")])],1)]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/problems/1001-1100/1074.number-of-submatrices-that-sum-to-target.html"}},[t._v("LeetCode 1074. Number of Submatrices That Sum to Target (hard)")])],1)])])])}),[],!1,null,null,null);s.default=n.exports}}]);
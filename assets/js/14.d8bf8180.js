(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{429:function(t,v,_){"use strict";_.r(v);var a=_(42),s=Object(a.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"广度优先遍历"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#广度优先遍历"}},[t._v("#")]),t._v(" 广度优先遍历")]),t._v(" "),_("p",[t._v("也叫 层遍历，BFS")]),t._v(" "),_("p",[t._v("遍历过程是从上到下，一层一层的，更接近人的思维")]),t._v(" "),_("h2",{attrs:{id:"实现方式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#实现方式"}},[t._v("#")]),t._v(" 实现方式")]),t._v(" "),_("p",[t._v("BFS 需要 借助 "),_("strong",[t._v("队列")]),t._v(" 来实现")]),t._v(" "),_("h2",{attrs:{id:"应用场景"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#应用场景"}},[t._v("#")]),t._v(" 应用场景")]),t._v(" "),_("ul",[_("li",[t._v("求解最短、最小路径问题")]),t._v(" "),_("li",[t._v("图的拓扑排序")]),t._v(" "),_("li",[t._v("最短路问题求解（dijkstra算法等）")])]),t._v(" "),_("h2",{attrs:{id:"优点和缺点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#优点和缺点"}},[t._v("#")]),t._v(" 优点和缺点")]),t._v(" "),_("p",[t._v("优点：")]),t._v(" "),_("ul",[_("li",[t._v("接近人的思维，易于理解")]),t._v(" "),_("li",[t._v("不会爆栈")]),t._v(" "),_("li",[t._v("求最短路")])]),t._v(" "),_("p",[t._v("缺点：")]),t._v(" "),_("ul",[_("li",[t._v("代码实现较长")])])])}),[],!1,null,null,null);v.default=s.exports}}]);
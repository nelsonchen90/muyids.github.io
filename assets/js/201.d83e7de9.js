(window.webpackJsonp=window.webpackJsonp||[]).push([[201],{357:function(e,v,_){"use strict";_.r(v);var t=_(42),s=Object(t.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h2",{attrs:{id:"redis的哨兵机制"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#redis的哨兵机制"}},[e._v("#")]),e._v(" Redis的哨兵机制")]),e._v(" "),_("p",[e._v("哨兵模式的作用是在Master宕机的情况下，从多个Slave中选出一个Master")]),e._v(" "),_("p",[e._v("哨兵作为独立的进程，通过发送命令，并等待服务器响应，来监控一主两从三台Redis是否正常运行")]),e._v(" "),_("p",[e._v("哨兵的两个作用：")]),e._v(" "),_("ol",[_("li",[e._v("监控；通过发送命令，让Redis服务器返回监控其运行状态，包括主和从")]),e._v(" "),_("li",[e._v("切换主从；当检测到master宕机，会自动将slave切换成master, 然后通过发布订阅模式通知其他从服务器，让其修改配置，切换master")])]),e._v(" "),_("p",[e._v("我们可以设置多个哨兵，哨兵之间也可以互相监控状态，保证Redis集群高可用 -- 多哨兵模式")]),e._v(" "),_("p",[_("code",[e._v("故障切换（failover）")]),e._v("的过程：主观下线->投票，failover操作->客观下线")]),e._v(" "),_("ul",[_("li",[e._v("假设主服务器宕机，哨兵1先检测到这个结果，系统并不会马上进行"),_("code",[e._v("failover过程")]),e._v("，仅仅是哨兵1主观的认为主服务器不可用，这个现象成为"),_("code",[e._v("主观下线")]),e._v("。")]),e._v(" "),_("li",[e._v("当后面的哨兵也检测到主服务器不可用，并且数量达到一定值时，那么哨兵之间就会进行一次投票，投票的结果由一个哨兵发起，进行"),_("code",[e._v("failover操作")]),e._v("。")]),e._v(" "),_("li",[e._v("切换成功后，就会通过发布订阅模式，让各个哨兵把自己监控的从服务器实现切换主机，这个过程称为"),_("code",[e._v("客观下线")]),e._v("。")])])])}),[],!1,null,null,null);v.default=s.exports}}]);
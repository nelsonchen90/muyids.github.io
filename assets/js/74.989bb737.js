(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{551:function(t,s,a){"use strict";a.r(s);var e=a(42),_=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"c-stl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c-stl"}},[t._v("#")]),t._v(" C++ STL")]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"头文件和作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#头文件和作用域"}},[t._v("#")]),t._v(" 头文件和作用域")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<bits/stdc++.h>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h2",{attrs:{id:"输入输出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#输入输出"}},[t._v("#")]),t._v(" 输入输出")]),t._v(" "),a("ul",[a("li",[t._v("输入数字 "),a("code",[t._v("cin >> a")])]),t._v(" "),a("li",[t._v("输入字符 "),a("code",[t._v("getline(cin, s);")]),t._v("，考虑到中间会有空格，所以用输入流"),a("code",[t._v("getline")]),t._v("。")]),t._v(" "),a("li",[a("code",[t._v("cin")]),t._v(" 和 "),a("code",[t._v("scanf")]),t._v(" 读入字符串时遇到空格就停止了。")])]),t._v(" "),a("p",[t._v("第一种：")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("scanf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d %d"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("EOF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getCounts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("第二种：")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncin "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// k是行数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    cin "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("ul",[a("li",[t._v("Q: 请问为为什么是 "),a("code",[t._v('while(~scanf("%d%d",&n,&m))')]),t._v("，而不是 "),a("code",[t._v('while(scanf("%d%d",&n,&m))')]),t._v("？")]),t._v(" "),a("li",[t._v("A: 论如何正确认识"),a("code",[t._v("scanf")]),t._v("的返回值。百科里说什么没读到n和m返回0对吧，下一句，如果碰到错误，比如"),a("code",[t._v("End Of File")]),t._v("这个，返回常量"),a("code",[t._v("EOF")]),t._v("，"),a("code",[t._v("EOF")]),t._v("一般默认定义为"),a("code",[t._v("-1")]),t._v("，"),a("code",[t._v("-1")]),t._v("按位取反就是"),a("code",[t._v("0")]),t._v("，其他的按位取反当然"),a("code",[t._v("非0")]),t._v("、最保险的写法其实是，"),a("code",[t._v("scanf()!=EOF")])])]),t._v(" "),a("h2",{attrs:{id:"内存赋值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内存赋值"}},[t._v("#")]),t._v(" 内存赋值")]),t._v(" "),a("h3",{attrs:{id:"memset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#memset"}},[t._v("#")]),t._v(" memset")]),t._v(" "),a("p",[t._v("在"),a("code",[t._v("memset")]),t._v("使用时要千万小心，在"),a("strong",[t._v("给char以外的数组赋值时")]),t._v("，只能初始化为"),a("code",[t._v("0或者-1")])]),t._v(" "),a("h2",{attrs:{id:"数学"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数学"}},[t._v("#")]),t._v(" 数学")]),t._v(" "),a("p",[a("code",[t._v("#define MaxN 0x3f3f3f3f")]),t._v(" // 无穷大\n"),a("code",[t._v("#define MinN 0xc0c0c0c0")]),t._v(" // 无穷小")]),t._v(" "),a("h2",{attrs:{id:"vector"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vector"}},[t._v("#")]),t._v(" vector")]),t._v(" "),a("p",[t._v("变长数组，倍增的思想")]),t._v(" "),a("ul",[a("li",[t._v("size()  返回元素个数")]),t._v(" "),a("li",[t._v("empty()  返回是否为空")]),t._v(" "),a("li",[t._v("clear()  清空")]),t._v(" "),a("li",[t._v("front()/back()")]),t._v(" "),a("li",[t._v("push_back()/pop_back()")]),t._v(" "),a("li",[t._v("begin()/end()")]),t._v(" "),a("li",[t._v("支持比较运算，按字典序")]),t._v(" "),a("li",[t._v("slice: "),a("code",[t._v("vector<int>(arr.begin()+i, arr.begin()+j)")])])]),t._v(" "),a("h2",{attrs:{id:"pair-int-int"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pair-int-int"}},[t._v("#")]),t._v(" pair<int, int>")]),t._v(" "),a("ul",[a("li",[t._v("first, 第一个元素")]),t._v(" "),a("li",[t._v("second, 第二个元素")]),t._v(" "),a("li",[t._v("支持比较运算，以first为第一关键字，以second为第二关键字（字典序）")])]),t._v(" "),a("h2",{attrs:{id:"string"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string"}},[t._v("#")]),t._v(" string")]),t._v(" "),a("p",[t._v("字符串")]),t._v(" "),a("ul",[a("li",[t._v("size()/length()  返回字符串长度")]),t._v(" "),a("li",[t._v("empty()")]),t._v(" "),a("li",[t._v("clear()")]),t._v(" "),a("li",[t._v("substr(起始下标，(子串长度))  返回子串")]),t._v(" "),a("li",[t._v("c_str()  返回字符串所在字符数组的起始地址")]),t._v(" "),a("li",[t._v("append(1, c)   末尾追加一个字符")]),t._v(" "),a("li",[t._v("erase\n"),a("ul",[a("li",[t._v("erase(str.begin()) 删除开头")]),t._v(" "),a("li",[t._v("erase(str.end() - 1)  删除结尾")]),t._v(" "),a("li",[t._v("erase(str.begin() + 3, str.end() - 3) 删除一个区间")]),t._v(" "),a("li",[t._v('s.erase(0, s.find_first_not_of(" ")); 删除头部空格')]),t._v(" "),a("li",[t._v('s.erase(s.find_last_not_of(" ") + 1); 删除尾部空格')])])]),t._v(" "),a("li",[t._v("atoi(s.c_str()) 字符串转数字；更多：atoi、atof、atol")]),t._v(" "),a("li",[t._v("to_string(123) 数字转字符串")]),t._v(" "),a("li",[t._v("reverse(s.begin(),s.end()); 反转字符串")]),t._v(" "),a("li",[t._v("s.insert(s.begin(), c) 插到头部")]),t._v(" "),a("li",[t._v("s.insert(s.begin() + 3, 'i') 插到中间")])]),t._v(" "),a("p",[t._v("string.h库")]),t._v(" "),a("ul",[a("li",[t._v("求字符串长度： int len = strlen(str);")]),t._v(" "),a("li",[t._v("字符串复制： strcpy();")]),t._v(" "),a("li",[t._v("字符串比较： strcmp();")]),t._v(" "),a("li",[t._v("字符串拼接： strcat();")]),t._v(" "),a("li",[t._v("查询字串： strchr();")]),t._v(" "),a("li",[t._v("查询子串： strstr();")])]),t._v(" "),a("h2",{attrs:{id:"queue-队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#queue-队列"}},[t._v("#")]),t._v(" queue, 队列")]),t._v(" "),a("ul",[a("li",[t._v("size()")]),t._v(" "),a("li",[t._v("empty()")]),t._v(" "),a("li",[t._v("push()  向队尾插入一个元素")]),t._v(" "),a("li",[t._v("front()  返回队头元素")]),t._v(" "),a("li",[t._v("back()  返回队尾元素")]),t._v(" "),a("li",[t._v("pop()  弹出队头元素")])]),t._v(" "),a("h2",{attrs:{id:"priority-queue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#priority-queue"}},[t._v("#")]),t._v(" priority_queue")]),t._v(" "),a("p",[t._v("优先队列，默认是 大根堆")]),t._v(" "),a("ul",[a("li",[t._v("push()  插入一个元素")]),t._v(" "),a("li",[t._v("top()  返回堆顶元素")]),t._v(" "),a("li",[t._v("pop()  弹出堆顶元素")]),t._v(" "),a("li",[a("code",[t._v("priority_queue<int> q;")]),t._v("  默认：大根堆")]),t._v(" "),a("li",[t._v("定义成小根堆的方式："),a("code",[t._v("priority_queue<int, vector<int>, greater<int>> q;")])]),t._v(" "),a("li",[t._v("队列元素为PII; "),a("code",[t._v("priority_queue<PII, vector<PII>, greater<PII>> heap;")]),t._v(" // 小顶堆")])]),t._v(" "),a("h2",{attrs:{id:"stack"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stack"}},[t._v("#")]),t._v(" stack")]),t._v(" "),a("p",[t._v("栈")]),t._v(" "),a("ul",[a("li",[t._v("size()")]),t._v(" "),a("li",[t._v("empty()")]),t._v(" "),a("li",[t._v("push()  向栈顶插入一个元素")]),t._v(" "),a("li",[t._v("top()  返回栈顶元素")]),t._v(" "),a("li",[t._v("pop()  弹出栈顶元素")])]),t._v(" "),a("h2",{attrs:{id:"deque"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deque"}},[t._v("#")]),t._v(" deque")]),t._v(" "),a("p",[t._v("双端队列")]),t._v(" "),a("ul",[a("li",[t._v("size()")]),t._v(" "),a("li",[t._v("empty()")]),t._v(" "),a("li",[t._v("clear()")]),t._v(" "),a("li",[t._v("front()/back()")]),t._v(" "),a("li",[t._v("push_back()/pop_back()")]),t._v(" "),a("li",[t._v("push_front()/pop_front()")]),t._v(" "),a("li",[t._v("begin()/end()")])]),t._v(" "),a("h2",{attrs:{id:"set-map-multiset-multimap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#set-map-multiset-multimap"}},[t._v("#")]),t._v(" set, map, multiset, multimap")]),t._v(" "),a("p",[t._v("基于平衡二叉树（红黑树），动态维护有序序列")]),t._v(" "),a("ul",[a("li",[t._v("size()")]),t._v(" "),a("li",[t._v("empty()")]),t._v(" "),a("li",[t._v("clear()")]),t._v(" "),a("li",[t._v("begin()/end()")]),t._v(" "),a("li",[t._v("++, -- 返回前驱和后继，时间复杂度 O(logn)")])]),t._v(" "),a("h3",{attrs:{id:"set-multiset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#set-multiset"}},[t._v("#")]),t._v(" set/multiset")]),t._v(" "),a("ul",[a("li",[t._v("insert()  插入一个数")]),t._v(" "),a("li",[t._v("find()  查找一个数")]),t._v(" "),a("li",[t._v("count()  返回某一个数的个数")]),t._v(" "),a("li",[t._v("erase()\n"),a("ul",[a("li",[t._v("输入是一个数x，删除所有x; O(k + logn)")]),t._v(" "),a("li",[t._v("输入一个迭代器，删除这个迭代器")])])]),t._v(" "),a("li",[t._v("lower_bound()/upper_bound()\n"),a("ul",[a("li",[t._v("lower_bound(x)  返回大于等于x的最小的数的迭代器")]),t._v(" "),a("li",[t._v("upper_bound(x)  返回大于x的最小的数的迭代器")])])])]),t._v(" "),a("h3",{attrs:{id:"map-multimap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#map-multimap"}},[t._v("#")]),t._v(" map/multimap")]),t._v(" "),a("ul",[a("li",[t._v("insert()  插入的数是一个pair")]),t._v(" "),a("li",[t._v("erase()  输入的参数是pair或者迭代器")]),t._v(" "),a("li",[t._v("find()")]),t._v(" "),a("li",[t._v("[]  注意multimap不支持此操作。 时间复杂度是 O(logn)")]),t._v(" "),a("li",[t._v("lower_bound()/upper_bound()")])]),t._v(" "),a("h3",{attrs:{id:"unordered-set-unordered-map-unordered-multiset-unordered-multimap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#unordered-set-unordered-map-unordered-multiset-unordered-multimap"}},[t._v("#")]),t._v(" unordered_set, unordered_map, unordered_multiset, unordered_multimap")]),t._v(" "),a("p",[t._v("哈希表")]),t._v(" "),a("ul",[a("li",[t._v("和上面类似，增删改查的时间复杂度是 O(1)")]),t._v(" "),a("li",[t._v("不支持 "),a("code",[t._v("lower_bound()/upper_bound()")]),t._v("， 迭代器的++，--")])]),t._v(" "),a("h3",{attrs:{id:"bitset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bitset"}},[t._v("#")]),t._v(" bitset")]),t._v(" "),a("p",[t._v("圧位")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("bitset"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("ul",[a("li",[t._v("count()  返回有多少个1")]),t._v(" "),a("li",[t._v("any()  判断是否至少有一个1")]),t._v(" "),a("li",[t._v("none()  判断是否全为0")]),t._v(" "),a("li",[t._v("set()  把所有位置成1")]),t._v(" "),a("li",[t._v("set(k, v)  将第k位变成v")]),t._v(" "),a("li",[t._v("reset()  把所有位变成0")]),t._v(" "),a("li",[t._v("flip()  等价于~")]),t._v(" "),a("li",[t._v("flip(k) 把第k位取反")])]),t._v(" "),a("h2",{attrs:{id:"技巧"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#技巧"}},[t._v("#")]),t._v(" 技巧")]),t._v(" "),a("ul",[a("li",[t._v("unordered_map + priority_queue 应用于有增删操作的求最值操作中")]),t._v(" "),a("li",[t._v("unordered_map用作计数器，从堆顶取极值的时候，判断堆顶元素个数是否大于0")])]),t._v(" "),a("h2",{attrs:{id:"由数据范围反推算法复杂度以及算法内容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#由数据范围反推算法复杂度以及算法内容"}},[t._v("#")]),t._v(" 由数据范围反推算法复杂度以及算法内容")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://muyids.oss-cn-beijing.aliyuncs.com/ac-oo.png",alt:"由数据范围反推算法复杂度以及算法内容"}})])])}),[],!1,null,null,null);s.default=_.exports}}]);
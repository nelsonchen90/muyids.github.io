(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{413:function(t,s,r){"use strict";r.r(s);var e=r(42),a=Object(e.a)({},(function(){var t=this,s=t.$createElement,r=t._self._c||s;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"bfs"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#bfs"}},[t._v("#")]),t._v(" BFS")]),t._v(" "),r("p",[t._v("宽度优先搜索 即层遍历")]),t._v(" "),r("p",[t._v("比较好理解，需要借助队列来实现")]),t._v(" "),r("h2",{attrs:{id:"应用场景"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#应用场景"}},[t._v("#")]),t._v(" 应用场景")]),t._v(" "),r("ul",[r("li",[t._v("最短路问题的算法一般都是基于 BFS")]),t._v(" "),r("li",[t._v("配合 辅助存储来达到记忆化搜索的目的")]),t._v(" "),r("li",[t._v("求解第K步的状态，即遍历到第K层")])]),t._v(" "),r("p",[r("strong",[t._v("更多内容")]),t._v("以及"),r("strong",[t._v("与DFS的对比")]),t._v("可以参考 "),r("RouterLink",{attrs:{to:"/alg/graph/树与图的遍历.html#对比"}},[r("strong",[t._v("树与图的遍历")])])],1),t._v(" "),r("h2",{attrs:{id:"题目"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#题目"}},[t._v("#")]),t._v(" 题目")]),t._v(" "),r("ul",[r("li",[r("p",[r("RouterLink",{attrs:{to:"/problems/301-400/317.shortest-distance-from-all-buildings.html"}},[t._v("LeetCode 317. Shortest Distance from All Buildings (hard)")])],1)]),t._v(" "),r("li",[r("p",[r("RouterLink",{attrs:{to:"/problems/1301-1400/1377.frog-position-after-t-seconds.html"}},[t._v("LeetCode 1377. Frog Position After T Seconds (hard)")])],1)])])])}),[],!1,null,null,null);s.default=a.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{443:function(t,v,_){"use strict";_.r(v);var l=_(42),a=Object(l.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"动态规划"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#动态规划"}},[t._v("#")]),t._v(" 动态规划")]),t._v(" "),_("p",[t._v("动态规划（Dynamic Programming）是一种分阶段求解策略问题的数学思想。")]),t._v(" "),_("p",[t._v("动态规划中包含三个重要概念：最优子结构、边界、状态转移公式。")]),t._v(" "),_("ul",[_("li",[t._v("最优子结构，求解一个问题时，首先要找出问题的最优子结构；")]),t._v(" "),_("li",[t._v("边界，边界是最简的最优子结构，无需再简化便可得到结果；如果一个问题没有边界，将无法得到有限的结果；")]),t._v(" "),_("li",[t._v("状态转换方程，是阶段与阶段直接的转换关系")])]),t._v(" "),_("p",[t._v("动态规划类似于高中数学的数学归纳法")]),t._v(" "),_("h2",{attrs:{id:"求解过程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#求解过程"}},[t._v("#")]),t._v(" 求解过程")]),t._v(" "),_("ol",[_("li",[_("p",[t._v("确定状态")]),t._v(" "),_("p",[t._v("研究最优策略的最后一步，转化为子问题，定义最优子结构")])]),t._v(" "),_("li",[_("p",[t._v("转换方式")]),t._v(" "),_("p",[t._v("根据子问题定义和最后一步求解过程，抽象出状态转换方程")])]),t._v(" "),_("li",[_("p",[t._v("初始条件和边界情况")]),t._v(" "),_("p",[t._v("细心，考虑周全")])]),t._v(" "),_("li",[_("p",[t._v("计算顺序")]),t._v(" "),_("p",[t._v("利用之前的计算结果")])])]),t._v(" "),_("h2",{attrs:{id:"动态规划题目特点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#动态规划题目特点"}},[t._v("#")]),t._v(" 动态规划题目特点")]),t._v(" "),_("ol",[_("li",[_("p",[t._v("计数")]),t._v(" "),_("ul",[_("li",[t._v("有多少种方式走到右下角")]),t._v(" "),_("li",[t._v("有多少种方法选出k个数使得和为sum")])])]),t._v(" "),_("li",[_("p",[t._v("求最值")]),t._v(" "),_("ul",[_("li",[t._v("从左上角走到右下角路径的最大数字和")]),t._v(" "),_("li",[t._v("求最长上升子序列的长度")])])]),t._v(" "),_("li",[_("p",[t._v("求存在性")]),t._v(" "),_("ul",[_("li",[t._v("青蛙过河，能否跳到最后一个位置")]),t._v(" "),_("li",[t._v("取石子游戏，先手是否必胜")]),t._v(" "),_("li",[t._v("能不能选出k个数使得和是sum")])])])]),t._v(" "),_("h2",{attrs:{id:"常见dp题型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#常见dp题型"}},[t._v("#")]),t._v(" 常见DP题型")]),t._v(" "),_("ul",[_("li",[_("RouterLink",{attrs:{to:"/alg/dp/背包dp.html"}},[t._v("背包dp")])],1),t._v(" "),_("li",[_("RouterLink",{attrs:{to:"/alg/dp/线性dp.html"}},[t._v("线性dp")])],1),t._v(" "),_("li",[_("RouterLink",{attrs:{to:"/alg/dp/区间dp.html"}},[t._v("区间dp")])],1),t._v(" "),_("li",[_("RouterLink",{attrs:{to:"/alg/dp/树形dp.html"}},[t._v("树形dp")])],1),t._v(" "),_("li",[_("RouterLink",{attrs:{to:"/alg/dp/数位dp.html"}},[t._v("数位dp")])],1),t._v(" "),_("li",[_("RouterLink",{attrs:{to:"/alg/dp/状态压缩dp.html"}},[t._v("状态压缩dp")])],1)]),t._v(" "),_("h2",{attrs:{id:"其他dp问题"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#其他dp问题"}},[t._v("#")]),t._v(" 其他DP问题")]),t._v(" "),_("ul",[_("li",[_("RouterLink",{attrs:{to:"/alg/dp/计数型dp.html"}},[t._v("计数型dp")])],1),t._v(" "),_("li",[_("RouterLink",{attrs:{to:"/alg/dp/递推型dp.html"}},[t._v("递推型dp")])],1),t._v(" "),_("li",[_("RouterLink",{attrs:{to:"/alg/dp/概率型dp.html"}},[t._v("概率型dp")])],1),t._v(" "),_("li",[_("RouterLink",{attrs:{to:"/alg/dp/博弈型dp.html"}},[t._v("博弈型dp")])],1),t._v(" "),_("li",[_("RouterLink",{attrs:{to:"/alg/dp/记忆化搜索.html"}},[t._v("记忆化搜索")])],1)]),t._v(" "),_("h2",{attrs:{id:"参考"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),_("ul",[_("li",[t._v("https://juejin.im/post/6872115031501340679")])])])}),[],!1,null,null,null);v.default=a.exports}}]);
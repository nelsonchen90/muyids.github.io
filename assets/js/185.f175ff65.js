(window.webpackJsonp=window.webpackJsonp||[]).push([[185],{387:function(s,t,n){"use strict";n.r(t);var a=n(42),e=Object(a.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("p",[s._v("mysql是日常开发中比较常用的一种"),n("code",[s._v("关系型数据库")])]),s._v(" "),n("p",[s._v("以企业数据库表结构为例，讲解常用的查询语句；")]),s._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://muyids.oss-cn-beijing.aliyuncs.com/blog/company.sql",target:"_blank",rel:"noopener noreferrer"}},[s._v("建表sql下载"),n("OutboundLink")],1)]),s._v(" "),n("li",[n("a",{attrs:{href:"https://muyids.oss-cn-beijing.aliyuncs.com/blog/mysql%E9%9D%A2%E8%AF%95%E9%A2%98%E8%AE%B2%E4%B9%89.docx",target:"_blank",rel:"noopener noreferrer"}},[s._v("讲义下载"),n("OutboundLink")],1)])]),s._v(" "),n("h2",{attrs:{id:"基本sql操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#基本sql操作"}},[s._v("#")]),s._v(" 基本SQL操作")]),s._v(" "),n("p",[s._v("DDL\\DML\\DQL\\TCL")]),s._v(" "),n("h2",{attrs:{id:"db"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#db"}},[s._v("#")]),s._v(" db")]),s._v(" "),n("h3",{attrs:{id:"查看所有db"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#查看所有db"}},[s._v("#")]),s._v(" 查看所有db")]),s._v(" "),n("p",[s._v("show databases;")]),s._v(" "),n("h3",{attrs:{id:"创建db"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#创建db"}},[s._v("#")]),s._v(" 创建db")]),s._v(" "),n("p",[s._v("create database company;")]),s._v(" "),n("h3",{attrs:{id:"使用db"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用db"}},[s._v("#")]),s._v(" 使用db")]),s._v(" "),n("p",[s._v("use company;")]),s._v(" "),n("h3",{attrs:{id:"查看库中表"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#查看库中表"}},[s._v("#")]),s._v(" 查看库中表")]),s._v(" "),n("p",[s._v("show tables;")]),s._v(" "),n("h2",{attrs:{id:"table"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#table"}},[s._v("#")]),s._v(" table")]),s._v(" "),n("h3",{attrs:{id:"建表"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#建表"}},[s._v("#")]),s._v(" 建表")]),s._v(" "),n("p",[s._v("员工表")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" EMP\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\t\n\tEMPNO "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("not")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\tENAME "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VARCHAR")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\tJOB "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VARCHAR")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\tMGR "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COMMENT")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"主管上级"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\tHIREDATE "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DATE")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DEFAULT")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\tSAL "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DOUBLE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\tCOMM "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DOUBLE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COMMENT")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"补助"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("primary")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("key")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("EMPNO"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\tDEPTNO "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("h3",{attrs:{id:"查看表结构"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#查看表结构"}},[s._v("#")]),s._v(" 查看表结构")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("desc")]),s._v(" emp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h3",{attrs:{id:"插入数据"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#插入数据"}},[s._v("#")]),s._v(" 插入数据")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" EMP "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("EMPNO"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ENAME"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" JOB"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" MGR"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" HIREDATE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" SAL"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" COMM"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" DEPTNO "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("7369")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'SMITH'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'CLERK'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("7902")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1980-12-17'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("800")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h3",{attrs:{id:"查询语句"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#查询语句"}},[s._v("#")]),s._v(" 查询语句")]),s._v(" "),n("p",[s._v("查询一个字段")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("查询多个字段")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("empno"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ename \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("查询所有字段")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("计算")]),s._v(" "),n("p",[s._v("计算员工的年薪；列出员工的编号，姓名和年薪")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" empno"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ename"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" sal"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" yearsal\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("计算部门平均薪水；列出部门编号，部门名和平均薪水")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("deptno"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("dept"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("dname"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("avgsal\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" deptno"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("avg")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" avgsal\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" deptno"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" t \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" dept\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" dept"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("deptno "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("deptno"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("计算部门人数；列出部门编号，部门名和人数")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("deptno"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("dname"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("pc\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" deptno"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("count")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("distinct")]),s._v(" empno"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" pc\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" deptno"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" t\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" dept "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" d\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("deptno "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("deptno"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("查找每个部门前三个工资最高的员工；列出部门编号，员工的编号，姓名和薪水 TODO")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("deptno"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("empno"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sal\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp e\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("count")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp t "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("deptno"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("deptno "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sal"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("deptno"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sal "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("desc")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("条件查询")]),s._v(" "),n("p",[s._v("查询薪水大于2000的员工；列出员工编号，员工名，薪水")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" empno"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("ename"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" sal\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" sal "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("查询薪水为1600和3000的员工；列出员工编号，员工名，薪水")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" empno"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("ename"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("sal\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" sal "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("in")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1600")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("查询所有名字以M开头的员工；列出员工名")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" ename "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("like")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"M%"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("查询姓名中第二个字符为A的所有员工；列出员工名")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" ename "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("like")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_A%"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("排序")]),s._v(" "),n("p",[s._v("按工资从高到低排序,相同工资按入职时间先后排序；列出员工编号，员工名，薪水,入职时间")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" empno"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("ename"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("sal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("hiredate\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" sal "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("desc")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" hiredate "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("asc")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("h3",{attrs:{id:"聚合函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#聚合函数"}},[s._v("#")]),s._v(" 聚合函数")]),s._v(" "),n("p",[s._v("查找工资总和，平均工资，工资最大值，工资最小值，员工总数")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sum")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("avg")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("max")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("min")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("count")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("distinct")]),s._v(" empno"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("查找所有工资高于平均工资的员工；列出员工名，薪水")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("avgsal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ename"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sal\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp e \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("avg")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" avgsal\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" t\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sal"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("avgsal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("分组查询"),n("code",[s._v("group by")])]),s._v(" "),n("p",[s._v("查找每个部门里所有工资高于部门平均工资的员工；列出部门编号，部门平均工资，员工名，薪水")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("deptno"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("avgsal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ename"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sal\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp e\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" deptno"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("avg")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" avgsal\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" deptno"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" t\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("deptno"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("deptno\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sal"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("avgsal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("计算不同部门的最高薪水；列出部门编号，最高薪水")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" deptno"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("max")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" maxsal\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" deptno"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("计算不同部门不同岗位的最高薪水；列出部门编号，岗位，最高薪水")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" deptno"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" job"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("max")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" maxsal\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" deptno"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" job"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("计算不同部门不同岗位除manager岗的最高薪水；列出部门编号，岗位，最高薪水")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" deptno"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" job"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("max")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" maxsal\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" job "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<>")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"manager"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" deptno"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" job"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("分组条件查询"),n("code",[s._v("group by + having")])]),s._v(" "),n("ul",[n("li",[s._v("where 是在group by之前完成过滤")]),s._v(" "),n("li",[s._v("having 是在group by之后完成过滤")])]),s._v(" "),n("p",[s._v("计算平均工资高于2000的岗位;列出岗位名，平均工资")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" job"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("avg")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" avgsal\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" job\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("having")]),s._v(" avgsal"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h3",{attrs:{id:"多表查询"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#多表查询"}},[s._v("#")]),s._v(" 多表查询")]),s._v(" "),n("p",[s._v("笛卡尔积")]),s._v(" "),n("p",[s._v("含义：若两张表进行连接查询的时候没有任何条件限制，最终的查询结果总数是两张表记录的乘积，该现在称为笛卡尔积现象。")]),s._v(" "),n("p",[s._v("当多张表进行连接查询时，若没有任何条件限制，会发生什么现象？")]),s._v(" "),n("p",[s._v("左连接：保留左边全部行\n右连接：保留右边全部行\n全连接：左右两边都保留")]),s._v(" "),n("p",[s._v("查询员工所在部门名称；列出员工名，部门名")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("dname \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("dept\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" emp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("deptno"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("dept"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("deptno"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("使用"),n("code",[s._v("join on")]),s._v(",join tableName on 限制条件，inner关键字省略，默认join都是内连接")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("dname \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" dept "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" emp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("deptno"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("dept"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("deptno"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("查询员工的工资等级，按工资等级由高到低排序；列出员工名，工资等级")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ename"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("grade\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp e "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" salgrade s "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sal "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("losal "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sal "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("hisal\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("grade "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("desc")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("查询员工的上级领导；列出员工名，领导名")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ename"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ename\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp e "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("left")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" emp m "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("mgr"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("empno"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("找出每一个员工对应的部门名称，以及该员工对应的工资等级;要求显示员工姓名、部门名、工资等级")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ename"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("dname"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" g"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("grade\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp e\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" dept d "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("deptno"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("deptno\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" salgrade g "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sal"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v("g"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("losal "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sal"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v("g"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("hisal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h3",{attrs:{id:"子查询"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#子查询"}},[s._v("#")]),s._v(" 子查询")]),s._v(" "),n("p",[s._v("select 语句嵌套 select 语句被称为子查询；")]),s._v(" "),n("p",[s._v("select子句可出现在select、from、where关键字后面，如下：")]),s._v(" "),n("ul",[n("li",[s._v("select\t… (select)…")]),s._v(" "),n("li",[s._v("from\t…(select)…")]),s._v(" "),n("li",[s._v("where\t…(select)…")])]),s._v(" "),n("p",[s._v("where语句后的子查询")]),s._v(" "),n("p",[s._v("找出比平均工资高的员工；")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" sal "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("avg")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("from语句后的子查询")]),s._v(" "),n("p",[s._v("找出每个部门的平均薪水，并且要求显示平均薪水的薪水等级；")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" deptno"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" avgsal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" grade\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" deptno"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("avg")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" avgsal\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" deptno\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" a "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" salgrade g "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("avgsal"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v("g"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("losal "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("avgsal"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v("g"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("hisal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" deptno "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("asc")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("limit关键字")]),s._v(" "),n("p",[s._v("找出工资前五的员工；")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" sal "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("desc")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("limit")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("找出工资排名在2-9的员工")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" sal "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("desc")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("limit")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("第14章 题经典SQL试题\n14-1取得每个部门最高薪水的人员名称\n思路分析：\n第一步：取得每个部门的最高薪水，按照部门分组求最大值")]),s._v(" "),n("p",[s._v("第二步：将上面的查询结果当做临时 t 与 emp e 进行表连接，连接条件\nt.deptno = e.deptno  and t.maxsal =  e.sal")]),s._v(" "),n("p",[s._v("答案：\nselect\ne.ename,t.*\nfrom\nemp e\njoin\n(select deptno,max(sal) as maxsal from emp group by deptno) t\non\nt.deptno = e.deptno  and  t.maxsal  =  e.sal;\n14-2哪些人的薪水在部门平均薪水之上\n思路分析\n第一步：求部门平均薪水，按照部门分组求平均值")]),s._v(" "),n("p",[s._v("将以上查询结果当做临时表 t 与 emp e 进行表连接，连接条件：                                       e.deptno = t.deptno and e.sal > t.avgsal ;")]),s._v(" "),n("p",[s._v("答案：\nselect\ne.ename,t.*\nfrom\nemp e\njoin\n(select deptno,avg(sal) as avgsal from emp group by deptno) t\non\ne.deptno = t.deptno and e.sal > t.avgsal;\n14-3取得部门中（所有人的）平均薪水等级\n思路分析\n第一步：求部门中（所有人）平均薪水，按照部门分组求平均值")]),s._v(" "),n("p",[s._v("第二步：将以上查询结果当做临时表 t 与 salgrade s 进行表连接，连接条件：                                     t.avgsal  between s.losal  and  s.hisal")]),s._v(" "),n("p",[s._v("答案：\nselect\nt.*,s.grade\nfrom\nsalgrade s\njoin\n(select deptno,avg(sal) as avgsal from emp e group by deptno) t\non\nt.avgsal between s.losal and s.hisal;\n14-4不准用组函数（MAX），取得最高薪水（给出两种解决方案）\n第一种方案：按照薪水降序排列，取第一个")]),s._v(" "),n("p",[s._v("自连接\nselect  sal from emp; 看做<a 表>")]),s._v(" "),n("p",[s._v("select  sal from emp; 看做<b 表>")]),s._v(" "),n("p",[s._v("将以上两个查询结果分别看成 a 表 和 b 表，进行表连接，条件：a.sal < b.sal，其中有一个值不小于从任何一个值，该值即为最大值；")]),s._v(" "),n("p",[s._v("使用distinct将以上结果去重，并且查询结果 NOT IN 不在以上查询结果中的即为最大值")]),s._v(" "),n("p",[s._v("答案：")]),s._v(" "),n("p",[s._v("select\nsal\nfrom\nemp\nwhere\nsal not in(select distinct a.sal from emp a join emp b on a.sal < b.sal);\n14-5 取得平均薪水最高的部门的部门编号（至少两个方案）\n第一种方案：思路分析\n求每一个部门的平均薪水")]),s._v(" "),n("p",[s._v("求部门平均薪水的最大值")]),s._v(" "),n("p",[s._v("将以上第一步和第二步结果联合，条件：结果1的值  等于 结果2的值")]),s._v(" "),n("p",[s._v("答案：")]),s._v(" "),n("p",[s._v("select"),n("br"),s._v("\ndeptno,avg(sal)\nfrom\nemp\ngroup by\ndeptno\nhaving\navg(sal)  =  (select avg(sal) as avgsal from emp group by deptno order by avgsal desc limit 1);")]),s._v(" "),n("p",[s._v("第二种方案：思路分析：使用Max函数\n求每一个部门的平均薪水")]),s._v(" "),n("p",[s._v("求部门平均薪水的最大值，使用Max函数\nSELECT  MAX(T.AVGSAL)"),n("br"),s._v("\nFROM  ( SELECT DEPTNO ,AVG(SAL) AVGSAL\nFROM EMP GROUP BY DEPTNO) T;")]),s._v(" "),n("p",[s._v("将以上第一步和第二步结果联合，条件：结果1的值  等于 结果2的值")]),s._v(" "),n("p",[s._v("答案：\nselect\ndeptno,avg(sal) as avgsal\nfrom\nemp\ngroup by\ndeptno\nhaving\navg(sal) = (select max(t.avgsal) from (select avg(sal) as avgsal from emp group by deptno) t);\n14-6取得平均薪水最高的部门的部门名称\n思路分析一：\n第一步：求部门的平均薪水，按部门编号分组")]),s._v(" "),n("p",[s._v("第二步：求部门平均最高薪水")]),s._v(" "),n("p",[s._v("第三步：将第一步和第二步联合起来，求平均薪水最高的部门编号，条件：结果1的平均薪水 等于 结果2的最大值")]),s._v(" "),n("p",[s._v("第四步：将以上查询结果当做临时表 t 与部门信息表 dept d 进行表连接，连接条件：t.deptno = d.deptno")]),s._v(" "),n("p",[s._v("思路分析二：员工表与部门表连接，按部门名称分组")]),s._v(" "),n("p",[s._v("14-7求平均薪水的等级最低的部门的部门名称\n思路分析\n第一步：求各个部门的平均薪水的等级\n注：平均薪水最低的等级肯定最低，平均薪水不是最低的也有可能等级最低")]),s._v(" "),n("p",[s._v("将第一个查询结果当做临时表 t 与 salgrade s 表进行表连接，连接条件：                                      t.avgsal  between  s.losal  and s.hisal")]),s._v(" "),n("p",[s._v("第二步：求各个部门的平均薪水的等级，要求显示内容包含部门名称\n将员工表 emp 与 部门表 dept 进行表连接，以d.dname 分组 ，连接条件： e.deptno = d.deptno")]),s._v(" "),n("p",[s._v("第三步：求最高（低）等级值")]),s._v(" "),n("p",[s._v("第四步：将第二步查询结果与第三步查询结果联合起来，                                                  条件：结果2.grade = 结果3.maxgrade")]),s._v(" "),n("p",[s._v("14-8取得比普通员工（员工代码没有在mgr上出现的）的最高薪水还要高的经理人姓名\n第一步：找出经理人员工编号")]),s._v(" "),n("p",[s._v("第二步：找出普通员工（即员工编号没有出现在mgr上的）")]),s._v(" "),n("p",[s._v("以语句无法查询到结果，因为 not  in 不会自动忽略空值，需要我们自动手动排除；\n举例说明：empno not in(7788,null) 等于 empno <>7788 or empno <> null\n纠正以上错误")]),s._v(" "),n("p",[s._v("知识点扩展：in 会自动忽略空值，如下：")]),s._v(" "),n("p",[s._v("第三步：将以上结果max求sal最大值，找出普通员工的最高薪水")]),s._v(" "),n("p",[s._v("找出薪水大于普通员工薪水的经理人")]),s._v(" "),n("p",[s._v("14-9取得薪水最高的前五名员工\n思路分析\n第一步：按员工薪水降序排列取前5名员工")]),s._v(" "),n("p",[s._v("14-10取得薪水最高的第六到第十名员工\n思路分析\n第一步：按薪水降序排列，用limit 5,5取第6到第10名员工")]),s._v(" "),n("p",[s._v("14-11取得最后入职的5名员工\n思路分析\n第一步：按照入职日期降序排列取前5个员工")]),s._v(" "),n("p",[s._v("取得每个薪水等级有多少员工\n思路分析\n第一步：找出每一个员工的薪水等级：emp e与salgrade s 进行表连接，                          条件：e.sal  between  s.losal  and  s.hisal;")]),s._v(" "),n("p",[s._v("在以上结果基础之上，按grade分组计数count(*)")]),s._v(" "),n("p",[s._v("14-12 面试题\n有3个表S(学生表)，C（课程表），SC（学生选课表）\nS（SNO，SNAME）代表（学号，姓名）"),n("br"),s._v("\nC（CNO，CNAME，CTEACHER）代表（课号，课名，教师）\nSC（SNO，CNO，SCGRADE）代表（学号，课号，成绩）\n问题：\n1，找出没选过“黎明”老师的所有学生姓名。\n2，列出2门以上（含2门）不及格学生姓名及平均成绩。\n3，即学过1号课程又学过2号课所有学生的姓名。\n请用标准SQL语言写出答案，\nS 学生表：SNO学号，SNAME姓名\nsno(PK)\tsname\n1\ta\n2\tb\n3\tc\n4\td")]),s._v(" "),n("p",[s._v("C 课程表：CNO课程编号，CNAME课程名称，CTEACHER课程老师\ncno(PK)\tCname\tcteacher\n1\tJava\t王老师\n2\tC++\t张老师\n3\tC#\t李老师\n4\tMySQL\t周老师\n5\tOracle\t黎明")]),s._v(" "),n("p",[s._v("SC 学生选课表：SNO学号，CNO课程编号，SCGRADE成绩\nsno\tcno\tscgrade\n1\t1\t50\n1\t2\t50\n1\t3\t50\n2\t2\t80\n2\t3\t70\n2\t4\t59\n3\t1\t60\n3\t2\t61\n3\t3\t99\n3\t4\t100\n3\t5\t52\n4\t3\t82\n4\t4\t99\n4\t5\t40\nsno+cno是复合主键，主键只有一个\nsno也是外键，cno也是外键，外键有两个\n如下\nDROP TABLE IF EXISTS SC;\nCREATE TABLE SC(\nSNO      VARCHAR(200),\nCNO      VARCHAR(200),\nSCGRADE  VARCHAR(200)\n);")]),s._v(" "),n("p",[s._v("DROP TABLE IF EXISTS S;\nCREATE TABLE S(\nSNO    VARCHAR(200 ),\nSNAME  VARCHAR(200)\n);")]),s._v(" "),n("p",[s._v("DROP TABLE IF EXISTS C;\nCREATE TABLE C(\nCNO       VARCHAR(200),\nCNAME     VARCHAR(200),\nCTEACHER  VARCHAR(200)\n);")]),s._v(" "),n("p",[s._v("INSERT INTO C ( CNO, CNAME, CTEACHER ) VALUES ( '1', '语文', '张');\nINSERT INTO C ( CNO, CNAME, CTEACHER ) VALUES ( '2', '政治', '王');\nINSERT INTO C ( CNO, CNAME, CTEACHER ) VALUES ( '3', '英语', '李');\nINSERT INTO C ( CNO, CNAME, CTEACHER ) VALUES ( '4', '数学', '赵');\nINSERT INTO C ( CNO, CNAME, CTEACHER ) VALUES ( '5', '物理', '黎明');\ncommit;")]),s._v(" "),n("p",[s._v("INSERT INTO S ( SNO, SNAME ) VALUES ( '1', '学生1');\nINSERT INTO S ( SNO, SNAME ) VALUES ( '2', '学生2');\nINSERT INTO S ( SNO, SNAME ) VALUES ( '3', '学生3');\nINSERT INTO S ( SNO, SNAME ) VALUES ( '4', '学生4');\ncommit;")]),s._v(" "),n("p",[s._v("INSERT INTO SC ( SNO, CNO, SCGRADE ) VALUES ( '1', '1', '40');\nINSERT INTO SC ( SNO, CNO, SCGRADE ) VALUES ( '1', '2', '30');\nINSERT INTO SC ( SNO, CNO, SCGRADE ) VALUES ( '1', '3', '20');\nINSERT INTO SC ( SNO, CNO, SCGRADE ) VALUES ( '1', '4', '80');\nINSERT INTO SC ( SNO, CNO, SCGRADE ) VALUES ( '1', '5', '60');\nINSERT INTO SC ( SNO, CNO, SCGRADE ) VALUES ( '2', '1', '60');\nINSERT INTO SC ( SNO, CNO, SCGRADE ) VALUES ( '2', '2', '60');\nINSERT INTO SC ( SNO, CNO, SCGRADE ) VALUES ( '2', '3', '60');\nINSERT INTO SC ( SNO, CNO, SCGRADE ) VALUES ( '2', '4', '60');\nINSERT INTO SC ( SNO, CNO, SCGRADE ) VALUES ( '2', '5', '40');\nINSERT INTO SC ( SNO, CNO, SCGRADE ) VALUES ( '3', '1', '60');\nINSERT INTO SC ( SNO, CNO, SCGRADE ) VALUES ( '3', '3', '80');\ncommit;")]),s._v(" "),n("ol",[n("li",[s._v("找出没选过“黎明”老师的所有学生姓名\n思路分析\n找出“黎明”老师所授课程编号\nselect  cno  from  c  where  cname=’黎明’;\n2.通过SC表查找 cno=以上查询查询  的sno，这些sno都是选了“黎明”老师的课程的学号\nselect  sno from  sc  where  cno = (select  cno  from  c  where  cname=’黎明’);\n3.在S学生表中查询 sno not in 以上查询结果的 sno\nselect"),n("br"),s._v("\nsno,sname"),n("br"),s._v("\nfrom"),n("br"),s._v("\ns"),n("br"),s._v("\nwhere"),n("br"),s._v("\nsno not in(select sno from sc where cno = (select cno from c where cteacher='黎明'));")])]),s._v(" "),n("p",[s._v("4.列出2门以上（含2门）不及格学生姓名及平均成绩\n思路分析\n第一步：找出2门以上不及格的学生编号：通过sc.sno分组查出不及格学生编号")]),s._v(" "),n("p",[s._v("第二步：找出不及格学生姓名，在第一步基础之后与S学生表进行连接：sc.sno=s.sno")]),s._v(" "),n("p",[s._v("第三步：在第二步基础之上，因为一个sno对应一个sname所以也可以对sname进行分组")]),s._v(" "),n("p",[s._v("第四步：找出每一个学生的平均成绩")]),s._v(" "),n("p",[s._v("第五步：\t将第三步与第四步联合，将第三步看成临时表 t1第四步看成临时表 t2，连接条件t1.sno = t2.sno")]),s._v(" "),n("ol",{attrs:{start:"3"}},[n("li",[s._v("即学过1号课程又学过2号课所有学生的姓名\n思路分析\n第一步：找出学过1号课程的学生")])]),s._v(" "),n("p",[s._v("第二步：找出学过2号课程的学生")]),s._v(" "),n("p",[s._v("第三步：将第一步和第二步联合")]),s._v(" "),n("p",[s._v("14-13列出所有员工及领导的名字\n思路分析\n第一步：将emp a当做员工表，将emp b当做领导表，进行表连接，a.mgr = b.empno")]),s._v(" "),n("p",[s._v("14-14 列出受雇日期早于其直接上级的所有员工编号、姓名、部门名称\n思路分析\n第一步：将emp a当作 员工表，将emp b当作 领导表，进行表连接， a.mgr = b.empno，并且员工受雇日期早于（小于）领导受雇日期")]),s._v(" "),n("p",[s._v("第二步：显示部门名称，在以上基础与dept表连接，a.deptno = d.deptno")]),s._v(" "),n("p",[s._v("14-15列出部门名称和这些部门的员工信息，同时列出那些没有员工的部门\n思路分析")]),s._v(" "),n("ol",[n("li",[s._v("通过emp e表与dept d表进行表连接，通过右连接条件：e.deptno = d.deptno")])]),s._v(" "),n("p",[s._v("14-16列出至少有5个员工的所有部门\n思路分析\n将emp e表与dept d 表进行表连接，条件：\te.deptno = d.deptno")]),s._v(" "),n("p",[s._v("主要考查：可以多个字段进行分组\n14-17 列出薪水比“SMITH”多的所有员工信息\n思路分析\n先查询出SMITH薪水，再查询出emp表中sal >SMITH薪水的员工")]),s._v(" "),n("p",[s._v("14-18 列出所有“CLERK”（办事员）的姓名及其部门名称，部门人数\n思路分析\n第一步：查询出job=’CLERK’的姓名及部门名称")]),s._v(" "),n("p",[s._v("第二步：查询出每个部门的员工数量")]),s._v(" "),n("p",[s._v("第三步：第一步与第二步查询结果临时表 t 进行表连接，d.deptno = t.deptno")]),s._v(" "),n("p",[s._v("14-19列出最低薪水大于1500的各种工作及从事此工作的全部雇员人数\n思路分析\n第一步：按照Job分组求出最低薪水并且大于1500")]),s._v(" "),n("p",[s._v("第二步：在第一步基础之后求出雇员数量")]),s._v(" "),n("p",[s._v("14-20列出在部门“SALES”<销售部>工作的员工的姓名，假定不知道销售部门的部门编号\n思路分析\n第一步：找出“SALES”部门的部门编号")]),s._v(" "),n("p",[s._v("第二步：从emp表中找出deptno 等于以上查询结果的员工名称")]),s._v(" "),n("p",[s._v("14-22列出薪金高于公司平均薪金的所有员工，所在部门、上级领导、雇员的工资等级\n思路分析\n第一步：找出公司薪金大于平均薪金的所有员工")]),s._v(" "),n("p",[s._v("第二步：在第一步基础之上，找出员工部门名称、上级领导及员工工资等级")]),s._v(" "),n("p",[s._v("第三步：以上结果还差一位KING员工，通过left join emp b即可；")]),s._v(" "),n("p",[s._v("14-23列出与“SCOTT”从事相同工作的所有员工及部门名称\n思路分析\n第一步：找出“SCOTT”的工作岗位 job")]),s._v(" "),n("p",[s._v("第二步：找出Job为以上查询结果的员工及部门名称")]),s._v(" "),n("p",[s._v("14-24列出薪金等于部门30中员工的薪金的其它员工的姓名和薪金\n思路分析\n第一步：找出部门30员工的薪金")]),s._v(" "),n("p",[s._v("找出其它薪金等于以上查询结果的员工姓名和薪金")]),s._v(" "),n("p",[s._v("14-25 列出薪金高于在部门30工作的所有员工的薪金的员工姓名和薪金、部门名称\n思路分析\n第一步：找出部门30员工的最高薪金")]),s._v(" "),n("p",[s._v("第二步：找出其它薪金大于以上查询结果的员工姓名、薪金和部门名称")]),s._v(" "),n("p",[s._v("14-26列出在每个部门工作的员工数量、平均工资和平均服务期限\n思路分析\n第一步：将员工表emp e与部门表 dept d进行表连接，将员工表和部门表信息全部显示")]),s._v(" "),n("p",[s._v("第二步：在以上基础之上，列出在每个部门工作的员工数量\n注意：count(*)统计包含空值")]),s._v(" "),n("p",[s._v("第三步：在以上基础之上，列出每个员工的平均工资\n注意：空值处理函数 ifnull()")]),s._v(" "),n("p",[s._v("第四步：在以上基础之上，列出每个员工的平均服务期限\nto_days()函数，计算出天数")]),s._v(" "),n("p",[s._v("求员工在公司的服务期限")]),s._v(" "),n("p",[s._v("14-27列出所有员工的姓名、部门名称和工资\n思路分析\n第一步：将emp e表与dept d表进行表连接，条件：e.deptno = d.deptno")]),s._v(" "),n("p",[s._v("14-28 列出所有部门的详细信息和人数\n思路分析\n第一步：部门表dept与员工表emp进行表连接")]),s._v(" "),n("p",[s._v("14-29列出各种工作的最低工资及从事此工作的雇员姓名\n思路分析\n第一步：找出各种工作的最低工资")]),s._v(" "),n("p",[s._v("将第一步查询结果当作临时表 t 与emp表进行表连接")]),s._v(" "),n("p",[s._v("14-30 列出各个部门MANAGER的最低薪金\n思路分析\n第一步：找出job为MANAGER的员工")]),s._v(" "),n("p",[s._v("第二步：在以上基础之上，按照部门进行分组求最低薪金")]),s._v(" "),n("p",[s._v("14-31 列出所有员工的年工资，按年薪从低到高排序\n思路分析：年薪=(sal+ifnull(comm,0))*12")]),s._v(" "),n("p",[s._v("14-32求出员工领导的薪水超过3000的员工名称和领导名称\n思路分析\n第一步：找出员工名称和领导名称")]),s._v(" "),n("p",[s._v("在以上查询结果基础之上，找出员工领导薪水大于3000的")]),s._v(" "),n("p",[s._v("14-33求部门名称中带“S”字符的部门员工的工资合计、部门人数\n思路分析\n第一步：求各个部门的员工工资合计、部门人数、部门名称")]),s._v(" "),n("p",[s._v('第二步：在以上查询结果之上，查询部门名称带"S"的')]),s._v(" "),n("p",[s._v("13-34 给任职日期超过30年的员工加薪10%\n思路分析\n第一步：找出任职日期>30年的员工然后加薪10%")]),s._v(" "),n("p",[s._v("第15章 存储引擎\n15-1 什么是存储引擎")]),s._v(" "),n("ol",[n("li",[s._v("MySQL特有的，其它数据库没有\n2.存储引擎的本质\n不同的存储引擎，底层采用不同的方式来存储数据，MySQL数据管理系统支持很多种\n3.查看当前服务器有多少存储引擎\nmysql> show engines\\G")])]),s._v(" "),n("p",[s._v("在创建表时，可使用ENGINES选项为CREATE TABLE语句显示指定存储引擎\nCREATE TABLE table_name(\nNO INT(4)\n)ENGINE = MyISAM;\n如果在创建表时没有显示指定存储引擎，则该表使用当前默认的存储引擎；\n默认的存储引擎可在 my.ini 配置文件中使用 default-storage-engin 选项指定；\n现有表的存储引擎可使用 ALTER TABLE 语句来改变：ALTER TABLE TABLENAME ENGINE = INNODB;\n为确定某表所使用的存储引擎，可以使用SHOW CREATE TABLE或SHOW STATUS语句：\nmysql> SHOW CREATE TABLE emp\\G\nmysql> SHOW TABLE STATUS LIKE 'emp'\\G\n15-2 常用的存储引擎")]),s._v(" "),n("ol",[n("li",[n("p",[s._v("MyISAM存储引擎\nMyISAM引擎是MySQL数据库最常用的；\n它管理的表具体以下牲：\n–使用三个文件表示每个表：\n格式文件 — 存储表的结构（mytable.frm）\n数据文件 — 存储表的数据（mytable.MYD）\n索引文件 — 存储表的索引（mytable.MYI）\n–灵活的AUTO_INCREMENT字段处理\n–可被转换为压缩、只读表来节省空间")])]),s._v(" "),n("li",[n("p",[s._v("InnoDB存储引擎\nInnoDB存储引擎是MySQL数据库的缺省引擎；\n它管理的表具体有以下特征：\n–每个InnoDB表在数据库目录中以.frm格式文件表示\n–InnoDB表空间tablespace被用于存储表的内容\n–提供一组用来记录事务性活动的日志文件\n–用COMMIT（提交）、SAVEPOINT及ROLLBACK（回滚）支持事务处理\n–提供全ACID兼容\n–在MySQL服务器崩溃后提供自动恢复\n–多版本（MVCC）和行级锁定\n–支持外键及引用的完整性，包括级联更新和删除")])]),s._v(" "),n("li",[n("p",[s._v("MEMORY存储引擎\n使用MEMORY存储引擎的表，其数据存储在内存中，且行的长度固定，这两个特点使得MEMORY存储引擎非常快；\nMEMORY存储引擎管理的表具有下列特征：\n–在数据库目录内，每个表均以.frm格式文件表示；\n–表数据及索引被存储在内存中；\n–表级锁机制；\n–不能包含TEXT或BLOB字段；\nMEMORY存储引擎以前被称为HEAP引擎；")])]),s._v(" "),n("li",[n("p",[s._v("选择合适的存储引擎\nMyISAM表最适合于大量的数据读而少量数据更新的混合操作。MyISAM表的另一种适用情形是使用压缩的中读表。\n如果查询中包含较多的数据更新操作，应使用InnoDB。其行级锁机制和多版本的支持为数据读取和更新的混合提供了良好的并发机制。\n可使用MEMORY存储引擎存储非永久需要的数据，或者是能够从基于磁盘的表中重新生成的数据。")])])]),s._v(" "),n("p",[s._v("第16章 事务Transaction\n16-1 什么是事务")]),s._v(" "),n("ol",[n("li",[s._v("事务对应的英文单词：Transaction")]),s._v(" "),n("li",[s._v("事务是(5点)：\n1()一个最小的不可再分的工作单元；\n(2)通常一个事务对应一个完整的业务；（如：银行转账业务）\n(3)而一个完整的业务需要批量的DML（insert、update、delete）语句共同完成；\n(4)事务只和DML语句有关系，或者说只有DML语句才有事务；\n(5)以上所描述的批量DML语句共有多少DML语句，这个和业务逻辑有关系，业务逻辑不同DML语句个数不同\t；\n3.关于银行转账业务\n银行转账业务：是一个完整的业务，最小的单元，不可再分，也就是说银行转账业务是一个完整的事务。\n举例（账户转账）\nt_act 账户表\nactno\tbalance\nact-001\t50000.0\nact-002\t10000.0")])]),s._v(" "),n("p",[s._v("act-001转10000.0给act-002，操作如下：\nupdate t_act  set  balance = 40000.0  where  actno = ‘act-001’;\nupdate t_act  set  balance = 20000.0  where  actno = ‘act-002’;")]),s._v(" "),n("p",[s._v("分析：\n以上两条DML语句必须同时成功或者同时失败，因为它为最小业务单元，不可拆分；当第一条DML语句执行成功之后，并不能将底层数据库中的第一个账户的数据修改，只是将操作记录了一下，这个记录是在内存中完成的，当第二条DML语句执行成功之后，和底层数据库文件中的数据完成同步。若第二条DML语句执行失败，将清空所有的历史操作记录。要完成以上功能，必须借助事务。")]),s._v(" "),n("p",[s._v("概述")]),s._v(" "),n("p",[s._v("事务可以保证多个操作原子性，要么全成功，要么全失败。对于数据库来说，事务保证批量的DML要么全成功，要么全失败。\n16-2事务具有四个特征ACID：")]),s._v(" "),n("ol",[n("li",[n("p",[s._v("原子性（Atomicity）\n事务是最小单元，不可再分；")])]),s._v(" "),n("li",[n("p",[s._v("一致性（Consistency）\n事务要求所有的DML语句操作的时候，必须保证同时成功或同时失败；")])]),s._v(" "),n("li",[n("p",[s._v("隔离性（Isolation）\n一个事务不会影响其它事务的运行；")])]),s._v(" "),n("li",[n("p",[s._v("持久性（Durability）\n在事务完成之后，该事务对数据库所作的更改将持久地保存在数据库中，并不会被回滚；\n16-3 事务中的一些概念\n开启事务：start  transaction\n结束事务：end  transaction\n提交事务：commit  transaction\n回滚事务：rollback  transaction\n16-4 和事务有关的两条SQL语句【TCL,事务控制语句】\nCOMMIT；\t\t提交\nROLLBACK；\t回滚")])]),s._v(" "),n("li",[n("p",[s._v("事务开启和结束的标志是什么 ？\n(1)开启的标志\n任何一条DML语句执行，标志事务的开启；\n(2)结束的标志:提交或者回滚\n提交：成功的结束，将所有的DML语句操作记录和底层硬盘文件中数据进行一次同步；\n回滚：失败的结束，将所有DML语句操作记录全部清空；")])]),s._v(" "),n("li",[n("p",[s._v("重点\n在事务进行过程中，未结束之前，DML语句是不会修改底层数据库文件中的数据。只是将历史操作记录一下，在内存中完成记录。只有在事务结束的，而且是成功结束的时候才会修改底层硬盘文件中的数据。\n16-5 MySQL中，事务的提交和回滚的演示\nMySQL默认事务自动提交\n在MySQL数据库管理系统中，默认情况下，事务是自动提交的；也就是说，只要执行一条DML语句，就开启了事务，并且提交了事务；\n第一种：关闭MySQL事务自动提交\n成功用法：start transaction；commit;\nstart transaction;\t\t手动开启事务\nDML语句…..\t\t\t批量DML语句\ncommit;\t\t\t\t手动提交事务【事务成功结束】\n演示例子：成功提交")])])]),s._v(" "),n("p",[s._v("回滚提交用法：start  transaction; rollback;\nstart transaction;\t\t手动开启事务\nDML语句…..\t\t\t批量DML语句\nrollback;\t\t\t\t手动回滚事务【事务失败结束】")]),s._v(" "),n("p",[s._v("演示例子：失败提交")]),s._v(" "),n("p",[s._v("第二种：关闭MySQL事务自动提交\n关闭自动提交事务\nset autocommit = off\n或\nset session autocommit = off")]),s._v(" "),n("p",[s._v("打开自动提交事务\nset autocommit = on\n或\nset session autocommit = on\n注：以上打开或关闭事务只对当前窗口有效；")]),s._v(" "),n("p",[s._v("查询事务状态 show variables like '%commit%';")]),s._v(" "),n("p",[s._v("关闭自动提交事务：set autocommit = off")]),s._v(" "),n("p",[s._v("16-6 事务的隔离级别\n事务四个特性ACID之一：隔离性（isolation）\n隔离性有四个隔离级别：\nread uncommitted\t读未提交\nread committed\t\t读已提交\nrepeatable read\t\t可重复读\nserializable\t\t\t串行化")]),s._v(" "),n("ol",[n("li",[n("p",[s._v("read committed 读未提交（级别最低）\n(1)事务A和和事务B，事务A未提交的数据，事务B可以读取\n(2)这里读取到的数据可以叫做“脏数据”或“脏读 Dirty Read”\n(3)读未提交隔离级别最低，这种级别一般只在理论上存在，数据库默认隔离级别一般都高于该隔离级别；")])]),s._v(" "),n("li",[n("p",[s._v("read committed 读已提交\n(1)事务A和事务B，事务A提交的数据，事务B才可读取到；\n(2)该隔离级别高于“读未提交”级别\n(3)换句话说：对方事务提交之后的数据，当前事务才可读取到。\n(4)该隔离级别可以避免脏数据；\n(a)该隔离级别能够导致“不可重复读取”\n(b)Oracle数据库管理系统默认隔离级别为“可重复读”")])]),s._v(" "),n("li",[n("p",[s._v("repeatable read 可重复读\n事务A和事务B，事务A提交之后的数据，事务B读取不到\n事务B是可重复读到数据的\n这种隔离级别高于“读已提交”\n换句话说，对方提交之后的数据，还是读取不到\n这种隔离级别可以避免“脏读和不可重复读”，达到“重复读取”；\nMySQL数据库管理系统默认隔离级别为：可重复读\n虽然可以达到“可重复读”效果，但是会导致“幻象读”")])]),s._v(" "),n("li",[n("p",[s._v("serializable 串行化\n事务A和事务B，事务A在操作数据库表中数据的时候，事务B只能排除等待；\n这种事务隔离级别一般很少使用，吞吐量太低，用户体验不好；\n这种隔离级别可以避免“幻象读”，每一次读取都是数据库表中真实的记录；\n事务A和事务B不再并发；")])]),s._v(" "),n("li",[n("p",[s._v("隔离级别与一致性问题的关系\n隔离级别\t脏读\t不可重复读\t幻象读\n读未提交\t可能\t可能\t可能\n读已提交\t不可能\t可能\t可能\n可重复读\t不可能\t不可能\t可能\n串行化\t不可能\t不可能\t不可能")])]),s._v(" "),n("li",[n("p",[s._v("设置服务器缺省隔离级别\n第一种：修改my.ini配置文件\n在 my.ini 文件中的[mysqld]下面添加：\n-------------------------my.ini-------------------------------\n[mysqld]\ntransaction-isolation = READ-COMMITTED\n--------------------------my.ini-------------------------------\n隔离级别可选项为：\n–READ-UNCOMMITTED\n–READ-COMMITTED\n–REPEATABLE-READ\n–SERIALIZABLE\n第二种：通过命令方式设置事务隔离级别\nSET TRANSACTION ISOLATION LEVEL"),n("isolation-level",[s._v(";\nisolation-level 可选值：\nREAD  UNCOMMITTED\nREAD  COMMITTED\nREPEATABLE  READ\nSERIALIZABLE")])],1)]),s._v(" "),n("li",[n("p",[s._v("设置隔离级别作用的范围\n事务隔离级别的作用范围分为两种：会话级、全局级\n会话级：只对当前会话有效\n全局级：对所有会话有效\n使用方法如下\n会话级：\nSET TRANSACTION ISOLATION LEVEL"),n("ISOLATION-LEVEL",[s._v(";\n或\nSET SESSION TRANSACTION ISOLATION LEVEL"),n("ISOLATION-LEVEL",[s._v(";\n全局级\nSET GLOBAL TRANSACTION ISOLATION LEVEL"),n("ISOLATION-LEVEL",[s._v(";")])],1)],1)],1)])]),s._v(" "),n("p",[s._v("设置全局级隔离级别的具体的SQL语句\nSET GLOBAL TRANSACTION ISOLATION LEVEL READ  UNCOMMITTED;\nSET GLOBAL TRANSACTION ISOLATION LEVEL READ  COMMITTED;")]),s._v(" "),n("p",[s._v("SET GLOBAL TRANSACTION ISOLATION LEVEL REPEATABLE  READ;")]),s._v(" "),n("p",[s._v("SET GLOBAL TRANSACTION ISOLATION LEVEL SERIALIZABLE;")]),s._v(" "),n("ol",{attrs:{start:"8"}},[n("li",[s._v("查看隔离级别\n为了查看当前隔离级别，可访问tx_isolation变量\n查看会话级的当前隔离级别@@tx_isolation")])]),s._v(" "),n("p",[s._v("查看全局的当前隔离级别：\nSELECT @@GLOBAL.TX_ISOLATION;")]),s._v(" "),n("ol",{attrs:{start:"9"}},[n("li",[s._v("并发事务与隔离级别示例\n(1)读未提交\tREAD UNCOMMITTED\n会话一\t会话二\nset global transaction isolation level read uncommitted;\t\n退出DOS窗口\t\nuse bjpowernode;\t\nuse bjpowernode;\nstart transaction;\t\nstart transaction;\ninsert into t_user(name) values('king');\t\nselect * from t_user;")])]),s._v(" "),n("p",[s._v("(2)读已提交\tREAD COMMITTED\n会话一\t会话二\nset global transaction isolation level read committed;\t\n退出DOS窗口\t\nuse bjpownode;\t\nuse bjpownode;\nstart transaction;\t\nstart transaction;\ninsert into t_user(name) values('allen');\t\nselect * from t_user;\ncommit;\t\nselect * from t_user;")]),s._v(" "),n("p",[s._v("(3)可重复读\tREPEATABLE READ\n会话一\t会话二\nset global transaction isolation level repeatable read;\t\n退出DOS窗口\t\nuse bjpownode;\t\nuse bjpownode;\nstart transaction;\t\nstart transaction;\nselect * from t_user;\t\nselect * from t_user;\ninsert into t_user(name) values('allen');\ncommit;\t\nselect * from t_user;")]),s._v(" "),n("p",[s._v("(4)串行化\tSERIALIZABLE\n会话一\t会话二\nuse bjpowernode;\t\ncreate table t_user(\nno int(3) primary key auto_increment,\nname varchar(32)\n);\ninsert into t_user(name) values('zhangsan');\ninsert into t_user(name) values('lisi');\t\nset global transaction isolation level serializable;\t\n退出DOS窗口\t\nuse bjpownode;\t\nuse bjpownode;\nstart transaction;\t\nstart transaction;\nselect * from t_user;\t\nselect * from t_user;\ninsert into t_user(name) values('allen');\t\nselect * from t_user;\ncommit;\t\n第17章 索引\n17-1索引原理（了解）")]),s._v(" "),n("ol",[n("li",[s._v("什么是索引\n索引对应的英语单词：index")]),s._v(" "),n("li",[s._v("索引作用：\n相当于一本字典目录，提高程序的检索 / 查询效率；表中每一个字段都可添加索引\n17-2主键自动添加索引：\n(1)能够通过主键查询的尽量通过主键查询，效率较高；\n(2)索引和表相同，存储在硬盘文件中\n(3)索引和表相同，都是一个对象，表是存储在硬盘文件中的，那么索(4)引也是表的一部分，索引也存储在硬盘文件中；\n17-3  MySQL数据库中表的检索方式有2种：\n第一种：全表扫描（效率较低）\n举例：查询ename=’KING’\n假设有一张表：emp 员工表，select * from emp where ename = ‘KING’;\n若ename没有添加索引，那么通过ename过滤数据的时候，ename字段会全表扫描；")])]),s._v(" "),n("p",[s._v("假设有一张表：dept 部门表，select  *  from dept  where  dname = \t‘ACCOUNTING’；\n若dname没有添加索引，那么通过dname过滤数据的时候，dname字段会全表扫描；\n第二种：通过索引检索（提高查询效率）")]),s._v(" "),n("p",[s._v("17-4 什么情况下适合给表中字段添加索引")]),s._v(" "),n("ol",[n("li",[n("p",[s._v("该字段数据量庞大")])]),s._v(" "),n("li",[n("p",[s._v("该字段很少的DML操作（由于索引也需要维护，DML操作多的话，也影响检索效率）")])]),s._v(" "),n("li",[n("p",[s._v("该字段经常出现在where条件中\n17-5 索引的应用")])]),s._v(" "),n("li",[n("p",[s._v("创建索引\n语法结构：\ncreate index 索引名 on 表名（列名）\n或\ncreate unique index 索引名 on 表名（列名）\n//添加unique表示在该表中的该列添加一个唯一性约束\n例如：create index dept_dname_index on dept(dname);")])]),s._v(" "),n("li",[n("p",[s._v("查看索引\n语法结构：\nshow  index from 表名\n例如：show index from dept;")])])]),s._v(" "),n("p",[s._v("3.使用索引\n注意一定不可以用select * … 可以看到type!=all了，说明使用了索引\nexplain select sal from emp where sal > 1500;")]),s._v(" "),n("p",[s._v("条件中的sal使用了索引")]),s._v(" "),n("p",[s._v("如下：\n假如我们要查找sal大于1500的所有行，那么可以扫描索引，索引时排序的，结果得出7行，我们知道不会再有匹配的记录，可以退出了。如果查找一个值，它在索引表中某个中间点以前不会出现，那么也有找到其第一个匹配索引项的定位算法，而不用进行表的顺序扫描（如二分查找法）。这样，可以快速定位到第一个匹配的值，以节省大量搜索时间。数据库利用了各种各样的快速定位索引值的技术，通常这些技术都属于DBA的工作。\n5. 删除索引\n语法结构：\ndrop index 索引名 on 表名;\n例如：drop index dept_dname_index on dept;")]),s._v(" "),n("p",[s._v("第18章 视图\n18-1 什么是视图\n视图对应英文单词：view\n视图在数据库管理系统中也是一个对象，也是以文件形式存在的\n视图也对应了一个查询结果，只是从不同的角度查看数据\n18-2 创建视图")]),s._v(" "),n("ol",[n("li",[s._v("语法结构\ncreate view 视图名称 as 查询语句；")]),s._v(" "),n("li",[s._v("例子")])]),s._v(" "),n("p",[s._v("注：\n视图中的数据是脱离emp原表的\n视图中的数据也可以进行增删改，但是视图中的增删改与原表emp无关\n只能将查询结果作为视图创建出来\n18-3 删除视图\n语法结构\ndrop view if exists 视图名称;")]),s._v(" "),n("p",[s._v("18-4 修改视图\n语法结构\nalter view 视图名称 as 查询语句\n如：alter view myview as select empno,ename,sal,hiredate;\n18-5 视图作用")]),s._v(" "),n("ol",[n("li",[s._v("面向视图查询，可以提高查询效率\n例如\n单独执行：select e.ename,d.dname from emp e join dept d on e.deptno = d.deptno;\n将上面执行结果当作视图对象创建\ncreate view myview as select e.ename,d.dname from emp e join dept d on e.deptno = d.deptno;\n面向视图查询：没有进行表连接，提高效率\nselect * from myview;\n2.【非常重要】隐藏表的实现细节\ncreate view myview as select empno a,ename b,sal c from emp;\n面向视图查询，只知道myview视图中有a,b,c三个字段，不知道该视图背后真实的表的结构是什么")])]),s._v(" "),n("p",[s._v("18-6 创建视图的注意事项\n注意:创建视图的SELECT语句中不能有子查询(出现在FROM后面的子查询)\nCREATE VIEW V_EMP\nAS\nSELECT E.EMPNO,E.ENAME,E.DEPTNO,E.DNAME,E.LOC\nFROM(\nSELECT E.*, D.DNAME,D.LOC\nFROM EMP E\nJOIN DEPT D ON (E.DEPTNO = D.DEPTNO)\n) E")]),s._v(" "),n("p",[s._v("第19章 DBA命令\n19-1 新建用户\nCREATE USER username IDENTIFIED BY 'password';\n说明:\nusername：你将创建的用户名,\npassword：该用户的登陆密码,密码可以为空,如果为空则该用户可以不需要密码登陆服务器.\n例如：\ncreate user p361 identified by '123';\n--可以登录但是只可以看见一个库  information_schema\n19-2 授权\n命令详解\nmysql> grant all privileges on dbname.tbname to 'username'@'login ip' identified by 'password' with grant option;")]),s._v(" "),n("ol",[n("li",[s._v("dbname=*表示所有数据库")]),s._v(" "),n("li",[s._v("tbname=*表示所有表")]),s._v(" "),n("li",[s._v("login ip=%表示任何ip")]),s._v(" "),n("li",[s._v("password为空，表示不需要密码即可登录")]),s._v(" "),n("li",[s._v("with grant option;  表示该用户还可以授权给其他用户\n\t细粒度授权\n首先以root用户进入mysql，然后键入命令：grant select,insert,update,delete on "),n("em",[s._v(".")]),s._v(' to p361 @localhost Identified by "123";\n如果希望该用户能够在任何机器上登陆mysql，则将localhost改为 "%" 。\n\t粗粒度授权\n我们测试用户一般使用该命令授权，\nGRANT ALL PRIVILEGES ON '),n("em",[s._v(".")]),s._v(" TO 'p361'@'%' Identified by \"123\";")])]),s._v(" "),n("p",[s._v("注意:用以上命令授权的用户不能给其它用户授权,如果想让该用户可以授权,用以下命令:")]),s._v(" "),n("p",[s._v("GRANT ALL PRIVILEGES ON "),n("em",[s._v(".")]),s._v(" TO 'p361'@'%' Identified by \"123\"  WITH GRANT OPTION;")]),s._v(" "),n("p",[s._v("privileges包括：")]),s._v(" "),n("ol",[n("li",[n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v(" alter：修改数据库的表\n")])])])]),s._v(" "),n("li",[n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v(" create：创建新的数据库或表\n")])])])]),s._v(" "),n("li",[n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v(" delete：删除表数据\n")])])])]),s._v(" "),n("li",[n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v(" drop：删除数据库/表\n")])])])]),s._v(" "),n("li",[n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v(" index：创建/删除索引\n")])])])]),s._v(" "),n("li",[n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v(" insert：添加表数据\n")])])])]),s._v(" "),n("li",[n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v(" select：查询表数据\n")])])])]),s._v(" "),n("li",[n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v(" update：更新表数据\n")])])])]),s._v(" "),n("li",[n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v(" all：允许任何操作\n")])])])]),s._v(" "),n("li",[n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("usage：只允许登录\n")])])])])]),s._v(" "),n("p",[s._v("19-3 回收授权\n命令详解\nrevoke privileges on dbname[.tbname] from username;\nrevoke all privileges on "),n("em",[s._v(".")]),s._v(" from p361;")]),s._v(" "),n("p",[s._v("use mysql\nselect * from user\n进入 mysql库中\n修改密码;\nupdate user set password =  password('qwe') where user = 'p646';\n刷新权限;\nflush privileges\n19-4 导入导出\n导出\n导出整个数据库\nC: \\Administrator> mysqldump -uroot -p123 bjpowernode>D:\\bjpowernode.sql")]),s._v(" "),n("p",[s._v("导出指定库下的指定表\nC: \\Administrator>mysqldump -uroot -p123 bjpowernode emp> D:\\ bjpowernode.sql")]),s._v(" "),n("p",[s._v("导入\n登录MySQL数据库管理系统之后执行：\nmysql>source D:\\ bjpowernode.sql\n第20章 数据库设计三范式\n定义：设计数据库的时候所依据的规范，共有三个规范；\n20-1 第一范式\n定义：要求有主键，数据库中不能出现重复记录，每一个字段是原子性不能再分；\n不符合第一范式示例：\n学生编号\t学生姓名\t联系方式\n1001\t张三\tzs@gmail.com,1359999999\n1002\t李四\tls@gmail.com,13699999999\n1001\t王五\tww@163.net,13488888888\n存在问题：\n数据存在重复记录，数据不唯一，没有主键\n联系方式可以再分，不是原子性\n学生编号(pk)\t学生姓名\temail\t联系电话\n1001\t张三\tzs@gmail.com\t1359999999\n1002\t李四\tls@gmail.com\t13699999999\n1003\t王五\tww@163.net\t13488888888\n关于第一范式：每一行必须唯一，也就是每个表必须有主键，这是我们数据库设计的最基本要求，主要通常采用数值型或定长字符串表示，关于列不可再分，应该根据具体的情况来决定。如联系方式，为了开发上的便利可能就采用一个字段了；\n20-2 第二范式\n定义：第二范式是建立在第一范式基础之上，要求数据库中所有非主键字段完全依赖主键，不能产生部分依赖；（严格意义上说：尽量不要使用联合主键）")]),s._v(" "),n("p",[s._v("示例：\n学生编号\t学生姓名\t教师编号\t教师姓名\n1001\t张三\t001\t王老师\n1002\t李四\t002\t赵老师\n1003\t王五\t001\t王老师\n1001\t张三\t002\t赵老师")]),s._v(" "),n("p",[s._v("确定主键：\n学生编号(PK)\t教师编号(PK)\t学生姓名\t教师姓名\n1001\t001\t张三\t王老师\n1002\t002\t李四\t赵老师\n1003\t001\t王五\t王老师\n1001\t002\t张三\t赵老师\n以上虽然确定了主键，但此表会出现大量冗余，主要涉及到的冗余字段为“学生姓名”和“教师姓名”，出现冗余的原因在于：学生姓名部分依赖了主键的一个字段学生编号，而没有依赖教师编号，而教师姓名部分依赖了主键的一个字段教师编号，这就是第二范式部分依赖。\n解决方案如下：\n学生信息表：\n学生编号（PK）\t学生姓名\n1001\t张三\n1002\t李四\n1003\t王五")]),s._v(" "),n("p",[s._v("教师信息表：\n教师编号（PK）\t教师姓名\n001\t王老师\n002\t赵老师")]),s._v(" "),n("p",[s._v("教师和学生的关系表：\n学生编号(PK)  fk学生表的学生编号\t教师编号(PK) fk教师表的教师编号\n1001\t001\n1002\t002\n1003\t001\n1001\t002\n以上是一种典型的“多对多”的设计\n20-3 第三范式\n定义：建立在第二范式基础之上，要求非主键字段不能产生传递依赖于主键字段；\n学生编号（PK）\t学生姓名\t班级编号\t班级名称\n1001\t张三\t01\t一年一班\n1002\t李四\t02\t一年二班\n1003\t王五\t03\t一年三班\n1004\t六\t03\t一年三班\n从上表可以看出，班级名称字段存在冗余，因为班级名称字段没有直接依赖于主键，班级名称字段依赖于班级编号，班级编号依赖于学生编号，那么这就是传递依赖，解决的办法是将冗余字段单独拿出来建立表，如：\n学生信息表：\n学生编号（PK）\t学生姓名\t班级编号（FK）\n1001\t张三\t01\n1002\t李四\t02\n1003\t王五\t03\n1004\t六\t03")]),s._v(" "),n("p",[s._v("班级信息表：\n班级编号（PK）\t班级名称\n01\t一年一班\n02\t一年二班\n03\t一年三班\n以上设计是一种典型的一对多的设计，一存储在一张表中，多存储在一张表中，在多的那张表中添加外键指向一的一方的主键\n20-4 三范式总结(几个比较经典的设计)")]),s._v(" "),n("ol",[n("li",[s._v("一对一\n第一种方案：分两张表存储，共享主键\n示例：t_husband  和 t_wife两张表\nt_husband\nhno（PK）\thname\n1\tZhangsan\n2\tWangwu\n3\tzhaoliu")])]),s._v(" "),n("p",[s._v("t_wife\nwno（PK）【同时也是外键FK，引用t_husband的主键】\twname\n3\ta\n2\tb\n1\tc")]),s._v(" "),n("p",[s._v("第二种方案：分两张表存储，外键唯一\n示例：t_husband 和 t_wife两张表\nt_husband\nhno（PK）\thname\tWifeno（FK - unique）\n1\tZhangsan\t100\n2\tWangwu\t200\n3\tzhaoliu\t300")]),s._v(" "),n("p",[s._v("t_wife\nwno（PK）\twname\n100\ta\n200\tb\n300\tc")]),s._v(" "),n("ol",{attrs:{start:"2"}},[n("li",[s._v("一对多")])]),s._v(" "),n("p",[s._v("分两张表存储，在多的一方添加外键，这个外键字段引用一的一方中的主键字段")]),s._v(" "),n("ol",{attrs:{start:"3"}},[n("li",[s._v("多对多")])]),s._v(" "),n("p",[s._v("分三张表存储，在学生表中存储学生信息，在课程表中存储课程信息，在选课表中存储学生选课信息")]),s._v(" "),n("ol",{attrs:{start:"4"}},[n("li",[s._v("实际开发中是怎样的？")])]),s._v(" "),n("p",[s._v("数据库设计尽量遵循三范式\n但是还是根据实际需求进行取舍，有时可能会拿冗余换速度，最终用目的要满足客户需求。")])])}),[],!1,null,null,null);t.default=e.exports}}]);
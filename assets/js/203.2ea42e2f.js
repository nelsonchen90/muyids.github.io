(window.webpackJsonp=window.webpackJsonp||[]).push([[203],{355:function(e,v,r){"use strict";r.r(v);var _=r(42),t=Object(_.a)({},(function(){var e=this,v=e.$createElement,r=e._self._c||v;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"概述"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[e._v("#")]),e._v(" 概述")]),e._v(" "),r("ul",[r("li",[e._v("Zookeeper是一个高性能分布式应用协调服务")]),e._v(" "),r("li",[e._v("Zookeeper工作机制")])]),e._v(" "),r("h1",{attrs:{id:"特点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[e._v("#")]),e._v(" 特点")]),e._v(" "),r("ul",[r("li",[e._v("Zookeeper：一个领导者（leader），多个跟随者（follower）组成的集群。")]),e._v(" "),r("li",[e._v("Leader负责进行投票的发起和决议，更新系统状态")]),e._v(" "),r("li",[e._v("Follower用于接收客户请求并向客户端返回结果，在选举Leader过程中参与投票")]),e._v(" "),r("li",[e._v("集群中只要有半数以上节点存活，Zookeeper集群就能正常服务。")]),e._v(" "),r("li",[e._v("全局数据一致：每个server保存一份相同的数据副本，client无论连接到哪个server，数据都是一致的。")]),e._v(" "),r("li",[e._v("更新请求顺序进行，来自同一个client的更新请求按其发送顺序依次执行。")]),e._v(" "),r("li",[e._v("数据更新原子性，一次数据更新要么成功，要么失败。")]),e._v(" "),r("li",[e._v("实时性，在一定时间范围内，client能读到最新数据。")])]),e._v(" "),r("h1",{attrs:{id:"数据结构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数据结构"}},[e._v("#")]),e._v(" 数据结构")]),e._v(" "),r("p",[e._v("树")]),e._v(" "),r("h1",{attrs:{id:"应用场景"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#应用场景"}},[e._v("#")]),e._v(" 应用场景")]),e._v(" "),r("ul",[r("li",[e._v("提供的服务包括：统一命名服务、统一配置管理、统一集群管理、服务器节点动态上下线、软负载均衡等。")]),e._v(" "),r("li",[e._v("Naming Service")]),e._v(" "),r("li",[e._v("配置管理")]),e._v(" "),r("li",[e._v("Leader Eletion")]),e._v(" "),r("li",[e._v("服务发现")]),e._v(" "),r("li",[e._v("同步")]),e._v(" "),r("li",[e._v("Group Service")]),e._v(" "),r("li",[e._v("Barrier")]),e._v(" "),r("li",[e._v("分布式队列")]),e._v(" "),r("li",[e._v("两阶段提交")])]),e._v(" "),r("h1",{attrs:{id:"日常工作中哪里用到了zookeeper"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#日常工作中哪里用到了zookeeper"}},[e._v("#")]),e._v(" 日常工作中哪里用到了Zookeeper")]),e._v(" "),r("ul",[r("li",[e._v("使用ZooKeeper作为dubbo的注册中心")]),e._v(" "),r("li",[e._v("使用ZooKeeper实现分布式锁。")]),e._v(" "),r("li",[e._v("Kafka中使用Zookeeper做集群管理，0.9之前使用zk存储consumer的offset")])])])}),[],!1,null,null,null);v.default=t.exports}}]);
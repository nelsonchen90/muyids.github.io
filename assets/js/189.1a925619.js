(window.webpackJsonp=window.webpackJsonp||[]).push([[189],{379:function(t,s,r){"use strict";r.r(s);var a=r(42),v=Object(a.a)({},(function(){var t=this,s=t.$createElement,r=t._self._c||s;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"锁机制"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#锁机制"}},[t._v("#")]),t._v(" 锁机制")]),t._v(" "),r("p",[t._v("当数据库有并发事务的时候,可能会产生数据的不一致,这时候需要一些机制来保证访问的次序,锁机制就是这样的一个机制。")]),t._v(" "),r("h2",{attrs:{id:"mysql都有哪些锁"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#mysql都有哪些锁"}},[t._v("#")]),t._v(" MySQL都有哪些锁")]),t._v(" "),r("p",[t._v("从锁的类别上来讲,有"),r("strong",[t._v("共享锁")]),t._v("和"),r("strong",[t._v("排他锁")]),t._v(".")]),t._v(" "),r("ul",[r("li",[r("p",[t._v("共享锁: 又叫做读锁. 当用户要进行数据的读取时,对数据加上共享锁.共享锁可以同时加上多个.")])]),t._v(" "),r("li",[r("p",[t._v("排他锁: 又叫做写锁. 当用户要进行数据的写入时,对数据加上排他锁.排他锁只可以加一个,他和其他的排他锁,共享锁都相斥.")])])]),t._v(" "),r("p",[t._v("锁的粒度取决于具体的存储引擎,InnoDB实现了行级锁,页级锁,表级锁。")]),t._v(" "),r("p",[t._v("他们的加锁开销从大到小, 并发能力也是从大到小。")])])}),[],!1,null,null,null);s.default=v.exports}}]);
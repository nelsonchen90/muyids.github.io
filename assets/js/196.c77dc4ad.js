(window.webpackJsonp=window.webpackJsonp||[]).push([[196],{365:function(e,t,a){"use strict";a.r(t);var s=a(42),v=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[e._v("Redis的并发竞争Key问题：同时有多个子系统去 Set 一个 Key。这个时候大家思考过要注意什么呢？")]),e._v(" "),a("h2",{attrs:{id:"如何解决"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何解决"}},[e._v("#")]),e._v(" 如何解决")]),e._v(" "),a("p",[e._v("分两种情况：不要求顺序和要求顺序")]),e._v(" "),a("h3",{attrs:{id:"如果对这个-key-操作，不要求顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如果对这个-key-操作，不要求顺序"}},[e._v("#")]),e._v(" 如果对这个 Key 操作，不要求顺序")]),e._v(" "),a("p",[e._v("这种情况下，准备一个分布式锁，大家去抢锁，抢到锁就做 set 操作即可，比较简单。")]),e._v(" "),a("h3",{attrs:{id:"如果对这个-key-操作，要求顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如果对这个-key-操作，要求顺序"}},[e._v("#")]),e._v(" 如果对这个 Key 操作，要求顺序")]),e._v(" "),a("p",[e._v("增加时间戳或数据版本号，"),a("strong",[e._v("乐观锁的机制")])]),e._v(" "),a("p",[e._v("假设有一个 key1，系统 A 需要将 key1 设置为 valueA，系统 B 需要将 key1 设置为 valueB，系统 C 需要将 key1 设置为 valueC。")]),e._v(" "),a("p",[e._v("期望按照 key1 的 value 值按照 valueA > valueB > valueC 的顺序变化。这种时候我们在数据写入数据库的时候，需要保存一个时间戳。")])])}),[],!1,null,null,null);t.default=v.exports}}]);
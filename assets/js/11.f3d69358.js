(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{423:function(e,t,r){"use strict";r.r(t);var a=r(42),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"二叉搜索树"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二叉搜索树"}},[e._v("#")]),e._v(" 二叉搜索树")]),e._v(" "),r("h2",{attrs:{id:"二叉搜索树的性质"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二叉搜索树的性质"}},[e._v("#")]),e._v(" 二叉搜索树的性质")]),e._v(" "),r("ul",[r("li",[e._v("结点左子树中所含结点的值小于等于当前结点的值")]),e._v(" "),r("li",[e._v("结点右子树中所含结点的值大于等于当前结点的值")]),e._v(" "),r("li",[e._v("左子树和右子树都是二叉搜索树")])]),e._v(" "),r("h2",{attrs:{id:"判断条件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#判断条件"}},[e._v("#")]),e._v(" 判断条件")]),e._v(" "),r("ul",[r("li",[e._v("中序遍历是递增序列的二叉树一定是二叉搜索树，可以利用中序遍历是否有序判断是否二叉搜索树")]),e._v(" "),r("li",[e._v("根节点大于所有左子树节点，如果根节点大于左子树的最大值节点即可，因为左子树的最大值位于左子树最右边的节点，所以只要根节点 > 左子树的最右节点即可；同理，根节点 < 右子树的最左节点；")])]),e._v(" "),r("h2",{attrs:{id:"寻找左子树的最右节点（寻找右子树的最左节点）"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#寻找左子树的最右节点（寻找右子树的最左节点）"}},[e._v("#")]),e._v(" 寻找左子树的最右节点（寻找右子树的最左节点）")]),e._v(" "),r("h2",{attrs:{id:"题目"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#题目"}},[e._v("#")]),e._v(" 题目")]),e._v(" "),r("ul",[r("li",[r("p",[r("RouterLink",{attrs:{to:"/alg/binary-tree/problems/401-500/426.convert-binary-search-tree-to-sorted-doubly-linked-list.html"}},[e._v("LeetCode 426. Convert Binary Search Tree to Sorted Doubly Linked List (medium)")])],1)]),e._v(" "),r("li",[r("p",[r("RouterLink",{attrs:{to:"/alg/binary-tree/problems/501-600/530.minimum-absolute-difference-in-bst.html"}},[e._v("LeetCode 530. Minimum Absolute Difference in BST (easy)")])],1)]),e._v(" "),r("li",[r("p",[r("RouterLink",{attrs:{to:"/alg/binary-tree/problems/201-300/230.kth-smallest-element-in-a-bst.html"}},[e._v("LeetCode 230. Kth Smallest Element in a BST (medium)")])],1)]),e._v(" "),r("li",[r("p",[r("RouterLink",{attrs:{to:"/alg/binary-tree/problems/501-600/501.find-mode-in-binary-search-tree.html"}},[e._v("LeetCode 501. Find Mode in Binary Search Tree (easy)")])],1)]),e._v(" "),r("li",[r("p",[r("RouterLink",{attrs:{to:"/alg/binary-tree/problems/901-1000/938.range-sum-of-bst.html"}},[e._v("LeetCode 938. Range Sum of BST (easy)")])],1)])])])}),[],!1,null,null,null);t.default=s.exports}}]);